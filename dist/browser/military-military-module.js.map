{"version":3,"sources":["webpack:///./src/app/military/components/military-area/military-area.component.html","webpack:///./src/app/military/components/military-area/military-area.component.scss","webpack:///./src/app/military/components/military-area/military-area.component.ts","webpack:///./src/app/military/components/military-status/military-status.component.html","webpack:///./src/app/military/components/military-status/military-status.component.scss","webpack:///./src/app/military/components/military-status/military-status.component.ts","webpack:///./src/app/military/military-routing.module.ts","webpack:///./src/app/military/military.component.html","webpack:///./src/app/military/military.component.scss","webpack:///./src/app/military/military.component.ts","webpack:///./src/app/military/military.module.ts","webpack:///./src/app/settings/services/setting.service.ts","webpack:///./src/app/settings/setting-template.ts"],"names":[],"mappings":"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","file":"military-military-module.js","sourcesContent":["module.exports = \"<div class=\\\"w3-block w3-row\\\">\\n  <div class=\\\"w3-white material-shadow safe-box col-lg-6 col-md-6 col-sm-6\\\">\\n    <div class=\\\"safe-box-header w3-large\\\" style=\\\"padding: 5px!important\\\">\\n      {{ \\\"military_areas\\\" | trans }}\\n    </div>\\n    <div class=\\\"border-bottom-dashed\\\"></div>\\n    <br>\\n\\n    <div class=\\\"row\\\">\\n\\n      <div class=\\\"col-lg-12\\\">\\n        <div class=\\\"custom-panel w3-display-container w3-round application-panel student-info-panel\\\">\\n\\n          <div class=\\\"custom-panel-body table-responsive w3-padding w3-center\\\" style=\\\"height: 400px;\\\" >\\n            <table class=\\\" table-bordered\\\" >\\n              <thead>\\n                <th>#</th>\\n                <th>{{ \\\"name\\\" | trans }}</th>\\n                <th>{{ \\\"government\\\" | trans }}</th> \\n                <th></th>\\n              </thead>\\n              <tbody>\\n                <tr *ngFor=\\\"let item of data index as i\\\" >\\n                  <td>{{ i + 1 }}</td> \\n                  <td>\\n                    <input type=\\\"text\\\" class=\\\"form-control input-sm\\\" [(ngModel)]=\\\"item.name\\\" >\\n                  </td>\\n                    <td>\\n                      <select class=\\\"form-control input-sm\\\" [(ngModel)]=\\\"item.government_id\\\"  >\\n                        <option *ngFor=\\\"let gover of govers\\\" value=\\\"{{ gover.id }}\\\">{{ gover.name }}</option>\\n                      </select>\\n                    </td>\\n                  <td>\\n                    <button class=\\\"btn btn-success\\\"\\n                    [disabled]=\\\"isSubmitted\\\"\\n                    (click)=\\\"send(item, i)\\\" >\\n                    <i *ngIf=\\\"!isSubmitted\\\" class=\\\"fa fa-check\\\" ></i>\\n                    <i *ngIf=\\\"isSubmitted\\\" class=\\\"fa fa-spin fa-spinner\\\" ></i>\\n                  </button>\\n                    <button class=\\\"btn btn-danger\\\"\\n                    [disabled]=\\\"isSubmitted\\\"\\n                    (click)=\\\"destroy(item, i)\\\" >\\n                      <i *ngIf=\\\"!isSubmitted\\\" class=\\\"fa fa-trash\\\" ></i>\\n                      <i *ngIf=\\\"isSubmitted\\\" class=\\\"fa fa-spin fa-spinner\\\" ></i>\\n                    </button>\\n                  </td>\\n                </tr>\\n                <tr>\\n                  <td></td>\\n                  <td>\\n                    <button class=\\\"fa fa-plus w3-block btn btn-default btn-flat\\\" (click)=\\\"add()\\\" ></button>\\n                  </td>\\n                </tr>\\n              </tbody>\\n            </table>\\n          </div>\\n        </div>\\n      </div>\\n\\n\\n\\n    </div>\\n\\n\\n  </div>\\n</div>\\n\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21pbGl0YXJ5L2NvbXBvbmVudHMvbWlsaXRhcnktYXJlYS9taWxpdGFyeS1hcmVhLmNvbXBvbmVudC5zY3NzIn0= */\"","import { Component, OnInit } from '@angular/core';\nimport { SettingTemplate } from 'src/app/settings/setting-template';\nimport { SettingService } from 'src/app/settings/services/setting.service';\nimport { ApplicationSettingService } from 'src/app/adminision/services/application-setting.service';\n\n@Component({\n  selector: 'app-military-area',\n  templateUrl: './military-area.component.html',\n  styleUrls: ['./military-area.component.scss']\n})\nexport class MilitaryAreaComponent extends SettingTemplate implements OnInit {\n\n  govers: any = [];\n\n  constructor(public settingService: SettingService, private applicationSettingService: ApplicationSettingService) {\n    super(settingService);\n    this.baseUrl = \"military_areas\";\n    this.requiredFields = ['name', 'government_id'];\n    this.get();\n  }\n\n  ngOnInit() {\n      this.applicationSettingService.getGovernments().subscribe((res: any) => {\n          this.govers = res;\n      });\n  }\n\n\n  action() {\n    this.get();\n  }\n\n}\n","module.exports = \"<div class=\\\"w3-block w3-row\\\">\\n  <div class=\\\"w3-white material-shadow safe-box col-lg-6 col-md-6 col-sm-6\\\">\\n    <div class=\\\"safe-box-header w3-large text-center\\\" style=\\\"padding: 5px!important\\\">\\n      {{ \\\"military_status\\\" | trans }}\\n    </div>\\n    <div class=\\\"border-bottom-dashed\\\"></div>\\n    <br>\\n\\n    <div class=\\\"row\\\">\\n\\n      <div class=\\\"col-lg-12\\\">\\n        <div class=\\\"custom-panel w3-display-container w3-round application-panel student-info-panel\\\">\\n          <div class=\\\"custom-panel-body table-responsive w3-padding w3-center\\\" style=\\\"height: 400px;\\\" >\\n            <table class=\\\" table-bordered\\\" >\\n              <thead>\\n                <th>#</th>\\n                <th>{{ \\\"name\\\" | trans }}</th>\\n                <th></th>\\n              </thead>\\n              <tbody>\\n                <tr *ngFor=\\\"let item of data index as i\\\" >\\n                  <td>{{ i + 1 }}</td>\\n                  <td>\\n                    <input type=\\\"text\\\" class=\\\"form-control input-sm\\\" [(ngModel)]=\\\"item.name\\\" >\\n                  </td>\\n                  <td>\\n                    <button class=\\\"btn btn-success\\\"\\n                    [disabled]=\\\"isSubmitted\\\"\\n                    (click)=\\\"send(item, i)\\\" >\\n                    <i *ngIf=\\\"!isSubmitted\\\" class=\\\"fa fa-check\\\" ></i>\\n                    <i *ngIf=\\\"isSubmitted\\\" class=\\\"fa fa-spin fa-spinner\\\" ></i>\\n                  </button>\\n                    <button class=\\\"btn btn-danger\\\"\\n                    [disabled]=\\\"isSubmitted\\\"\\n                    (click)=\\\"destroy(item, i)\\\" >\\n                      <i *ngIf=\\\"!isSubmitted\\\" class=\\\"fa fa-trash\\\" ></i>\\n                      <i *ngIf=\\\"isSubmitted\\\" class=\\\"fa fa-spin fa-spinner\\\" ></i>\\n                    </button>\\n                  </td>\\n                </tr>\\n                <tr>\\n                  <td></td>\\n                  <td>\\n                    <button class=\\\"fa fa-plus w3-block btn btn-default btn-flat\\\" (click)=\\\"add()\\\" ></button>\\n                  </td>\\n                </tr>\\n              </tbody>\\n            </table>\\n          </div>\\n        </div>\\n      </div>\\n\\n\\n\\n    </div>\\n\\n\\n  </div>\\n</div>\\n\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21pbGl0YXJ5L2NvbXBvbmVudHMvbWlsaXRhcnktc3RhdHVzL21pbGl0YXJ5LXN0YXR1cy5jb21wb25lbnQuc2NzcyJ9 */\"","import { Component, OnInit } from '@angular/core';\nimport { SettingService } from 'src/app/settings/services/setting.service';\nimport { SettingTemplate } from 'src/app/settings/setting-template';\n\n@Component({\n  selector: 'app-military-status',\n  templateUrl: './military-status.component.html',\n  styleUrls: ['./military-status.component.scss']\n})\nexport class MilitaryStatusComponent extends SettingTemplate implements OnInit {\n\n\n  constructor(public settingService: SettingService) {\n    super(settingService);\n    this.baseUrl = \"military_status\";\n    this.requiredFields = ['name'];\n    this.get();\n  }\n\n  ngOnInit() {\n  }\n\n\n  action() {\n    this.get();\n  }\n}\n","import { Component, NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { MilitaryComponent } from './military.component';\r\nimport { MilitaryAreaComponent } from './components/military-area/military-area.component';\r\nimport { MilitaryStatusComponent } from './components/military-status/military-status.component';\r\nimport { Auth } from '../shared/auth';\r\nimport { AuthGuestService } from '../shared/middlewares/auth-guest.service';\r\n\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: \"\",\r\n    component: MilitaryComponent,\r\n    children: [\r\n      {\r\n        path: 'area',\r\n        canActivate: [AuthGuestService],\r\n        data: {can: Auth.can('military_area')},\r\n        component: MilitaryAreaComponent\r\n      },\r\n      {\r\n        path: 'status',\r\n        canActivate: [AuthGuestService],\r\n        data: {can: Auth.can('military_status')},\r\n        component: MilitaryStatusComponent\r\n      }\r\n\r\n    ]\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class MilitaryRoutingModule { }\r\n","module.exports = \"<div class=\\\"content\\\">\\r\\n  <div class=\\\"row\\\">\\r\\n    <div class=\\\"col-md-2\\\">\\r\\n\\r\\n      <!-- Profile Image -->\\r\\n      <div class=\\\"box box-primary\\\">\\r\\n        <div class=\\\"box-body box-profile\\\">\\r\\n          <h3 class=\\\"profile-username text-center\\\">{{ \\\"military\\\" | trans }}</h3>\\r\\n          <ul class=\\\"list-group list-group-unbordered\\\">\\r\\n            <li class=\\\"list-group-item\\\"  permission=\\\"military_area\\\" >\\r\\n              <a class=\\\"active\\\" routerLink=\\\"/military/area\\\"><i class=\\\"fa fa-circle-o\\\"></i>\\r\\n                {{ \\\"military_areas\\\" | trans }}\\r\\n              </a>\\r\\n            </li>\\r\\n            <li class=\\\"list-group-item\\\"  permission=\\\"military_status\\\">\\r\\n              <a class=\\\"active\\\" routerLink=\\\"/military/status\\\"><i class=\\\"fa fa-circle-o\\\"></i>\\r\\n                {{ \\\"military_status\\\" | trans }}\\r\\n              </a>\\r\\n            </li>\\r\\n\\r\\n          </ul>\\r\\n        </div>\\r\\n      </div>\\r\\n\\r\\n    </div>\\r\\n    <div class=\\\"col-md-10\\\">\\r\\n      <router-outlet></router-outlet>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n\\r\\n\\r\\n\\r\\n\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21pbGl0YXJ5L21pbGl0YXJ5LmNvbXBvbmVudC5zY3NzIn0= */\"","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-military',\r\n  templateUrl: './military.component.html',\r\n  styleUrls: ['./military.component.scss']\r\n})\r\nexport class MilitaryComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { SharedModule } from '../shared/shared.module';\r\nimport { DataTablesModule } from 'angular-datatables';\r\n\r\nimport { MilitaryRoutingModule } from './military-routing.module';\r\nimport { MilitaryComponent } from './military.component'; \r\nimport { MilitaryAreaComponent } from './components/military-area/military-area.component';\nimport { MilitaryStatusComponent } from './components/military-status/military-status.component';\r\n\r\n@NgModule({\r\n  declarations: [MilitaryComponent, MilitaryAreaComponent, MilitaryStatusComponent],\r\n  imports: [\r\n    CommonModule,\r\n    MilitaryRoutingModule,\r\n    SharedModule,\r\n    DataTablesModule\r\n  ]\r\n})\r\nexport class MilitaryModule { }\r\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Auth } from 'src/app/shared/auth';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class SettingService {\n\n  public baseUrl = \"\";\n\n  constructor(private http: HttpClient) {\n    this.get();\n  }\n\n\n  /**\n   * get services from api\n   *\n   */\n  public get() {\n    return this.http.get(this.baseUrl + '?api_token=' + Auth.getApiToken());\n  }\n\n  /**\n   * store new service\n   */\n  public store(data: any) {\n    return this.http.post(this.baseUrl + '/store' + '?api_token=' + Auth.getApiToken(), data);\n  }\n\n  /**\n   * update service\n   */\n  public update(data: any) {\n    return this.http.post(this.baseUrl + '/update/' + data.id + '?api_token=' + Auth.getApiToken(), data);\n  }\n\n  /**\n   * remove service\n   */\n  public destroy(id) {\n    return this.http.post(this.baseUrl + '/delete/' + id + '?api_token=' + Auth.getApiToken(), null);\n  }\n}\n","import { Helper } from '../shared/helper';\nimport { Message } from '../shared/message';\nimport { SettingService } from './services/setting.service';\n\nexport class SettingTemplate {\n\n  item: any = {};\n  isSubmitted = false;\n  data: any = [];\n  requiredFields = [];\n  baseUrl = null\n\n  constructor(public settingService: SettingService) {\n    this.settingService.baseUrl = this.baseUrl;\n  }\n\n  action(res) {\n\n  }\n\n  get() {\n    this.settingService.baseUrl = this.baseUrl;\n    this.settingService.get().subscribe((res) => {\n      this.data = res;\n    });\n  }\n\n  add() {\n    let item = {};\n    this.data.push(item);\n  }\n\n  validate(item=this.item) {\n    let valid = true;\n    this.requiredFields.forEach(element => {\n      if (!item[element])\n        valid = false;\n    });\n    return valid;\n  }\n\n  send(item=this.item, index=null) {\n    this.settingService.baseUrl = this.baseUrl;\n    if (item.id)\n      this.update(item, index=null);\n    else\n      this.store(item, index=null);\n  }\n\n  store(item=this.item, index=null) {\n    if (!this.validate(item))\n      return Message.error(Helper.trans('fill all data'));\n\n    this.isSubmitted = true;\n    this.settingService.store(item).subscribe((res: any)=>{\n      if (res.status == 1) {\n        Message.success(res.message);\n        //\n        if (index)\n        this.data[index] = res.data;\n        let arr = this.data;\n        this.data = [];\n        this.data = arr;\n      }\n      else\n        Message.error(res.message);\n\n      this.action(res);\n      this.isSubmitted = false;\n    });\n  }\n\n  update(item=this.item, index=null) {\n    if (!this.validate(item))\n      return Message.error(Helper.trans('fill all data'));\n\n    this.isSubmitted = true;\n    this.settingService.update(item).subscribe((res: any)=>{\n      if (res.status == 1) {\n        Message.success(res.message);\n        //\n        if (index)\n        this.data[index] = res.data;\n        let arr = this.data;\n        this.data = [];\n        this.data = arr;\n      }\n      else\n        Message.error(res.message);\n\n      this.action(res);\n      this.isSubmitted = false;\n    });\n  }\n\n  destroy(item, index) {\n    this.settingService.baseUrl = this.baseUrl;\n    let self = this;\n    Message.confirm(Helper.trans('are you sure'), ()=>{\n\n      if (item.id) {\n        this.isSubmitted = true;\n        this.settingService.destroy(item.id).subscribe((res: any)=>{\n          if (res.status == 1)\n            Message.success(res.message);\n          else\n            Message.error(res.message);\n\n          this.action(res);\n          this.isSubmitted = false;\n        });\n      }\n      // remove item from array\n      this.data.splice(index, index+1);\n      let arr = this.data;\n      this.data = [];\n      this.data = arr;\n    });\n  }\n}\n"],"sourceRoot":""}