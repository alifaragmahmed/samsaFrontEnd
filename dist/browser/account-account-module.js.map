{"version":3,"sources":["webpack:///./node_modules/angular-hashtable/fesm5/angular-hashtable.js","webpack:///./src/app/account/account-routing.module.ts","webpack:///./src/app/account/account.component.html","webpack:///./src/app/account/account.component.scss","webpack:///./src/app/account/account.component.ts","webpack:///./src/app/account/account.module.ts","webpack:///./src/app/account/components/academic-year-index/academic-year-index.component.html","webpack:///./src/app/account/components/academic-year-index/academic-year-index.component.scss","webpack:///./src/app/account/components/academic-year-index/academic-year-index.component.ts","webpack:///./src/app/account/components/safe/available-service/available-service.component.html","webpack:///./src/app/account/components/safe/available-service/available-service.component.scss","webpack:///./src/app/account/components/safe/available-service/available-service.component.ts","webpack:///./src/app/account/components/safe/installment/installment.component.html","webpack:///./src/app/account/components/safe/installment/installment.component.scss","webpack:///./src/app/account/components/safe/installment/installment.component.ts","webpack:///./src/app/account/components/safe/safe-index/safe-index.component.html","webpack:///./src/app/account/components/safe/safe-index/safe-index.component.scss","webpack:///./src/app/account/components/safe/safe-index/safe-index.component.ts","webpack:///./src/app/account/components/safe/student-installment/student-installment.component.html","webpack:///./src/app/account/components/safe/student-installment/student-installment.component.scss","webpack:///./src/app/account/components/safe/student-installment/student-installment.component.ts","webpack:///./src/app/account/components/safe/student-payment/student-payment.component.html","webpack:///./src/app/account/components/safe/student-payment/student-payment.component.scss","webpack:///./src/app/account/components/safe/student-payment/student-payment.component.ts","webpack:///./src/app/account/components/safe/student-service/student-service.component.html","webpack:///./src/app/account/components/safe/student-service/student-service.component.scss","webpack:///./src/app/account/components/safe/student-service/student-service.component.ts","webpack:///./src/app/account/components/services/service-create/service-create.component.html","webpack:///./src/app/account/components/services/service-create/service-create.component.scss","webpack:///./src/app/account/components/services/service-create/service-create.component.ts","webpack:///./src/app/account/components/services/service-index/service-index.component.html","webpack:///./src/app/account/components/services/service-index/service-index.component.scss","webpack:///./src/app/account/components/services/service-index/service-index.component.ts","webpack:///./src/app/account/components/services/service-table/service-table.component.html","webpack:///./src/app/account/components/services/service-table/service-table.component.scss","webpack:///./src/app/account/components/services/service-table/service-table.component.ts","webpack:///./src/app/account/models/payment.ts","webpack:///./src/app/account/services/academic-year.service.ts","webpack:///./src/app/account/services/student-account.service.ts","webpack:///./src/app/account/services/student-service.service.ts","webpack:///./src/app/shared/message.ts"],"names":[],"mappings":";;;;;;;;;;AAAA;AAAA;AAAA;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA,sBAAsB,uBAAuB,EAAE;AAC/C;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA,sBAAsB,uBAAuB,EAAE;AAC/C;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD,WAAW,EAMV;;AAED;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;;AAEA;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;;AAEqB;AACrB;;;;;;;;;;;;;;;;;;;;;;;AChQuF;AAChD;AACc;AAC+C;AAC7C;AACqD;AAG5G,IAAM,MAAM,GAAW;IACrB;QACE,IAAI,EAAE,MAAM;QACZ,SAAS,EAAE,mGAAkB;KAC9B;IACD;QACE,IAAI,EAAE,SAAS;QACf,SAAS,EAAE,mEAAgB;QAC3B,QAAQ,EAAE;YACR;gBACE,IAAI,EAAE,UAAU;gBAChB,SAAS,EAAE,gHAAqB;aACjC;YACD;gBACE,IAAI,EAAE,wBAAwB;gBAC9B,SAAS,EAAE,wHAA0B;aACtC;SACF;KACF;IACD;QACE,IAAI,EAAE,IAAI;QACV,UAAU,EAAE,GAAG;QACf,SAAS,EAAE,MAAM;KAClB;CACF,CAAC;AAQF;IAAA;IACA,CAAC;IADY,oBAAoB;QANhC,8DAAQ,CAAC;YACR,OA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","file":"account-account-module.js","sourcesContent":["/**\n * @fileoverview added by tsickle\n * Generated from: lib/angular-hashtable.class.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/*\n* This class represents the class definition.\n*/\n/**\n * @template T, L\n */\nvar  /*\n* This class represents the class definition.\n*/\n/**\n * @template T, L\n */\nHashTable = /** @class */ (function () {\n    function HashTable() {\n        this.table = {};\n    }\n    /**\n     * @param {?} key\n     * @param {?} value\n     * @return {?}\n     */\n    HashTable.prototype.put = /**\n     * @param {?} key\n     * @param {?} value\n     * @return {?}\n     */\n    function (key, value) {\n        this.table['v_' + key] = value;\n        return this;\n    };\n    /**\n     * @param {?} key\n     * @return {?}\n     */\n    HashTable.prototype.get = /**\n     * @param {?} key\n     * @return {?}\n     */\n    function (key) {\n        return this.table['v_' + key];\n    };\n    /**\n     * @return {?}\n     */\n    HashTable.prototype.getAll = /**\n     * @return {?}\n     */\n    function () {\n        var _this = this;\n        /** @type {?} */\n        var vector = Array.from(Object.keys(this.table), (/**\n         * @param {?} k\n         * @return {?}\n         */\n        function (k) { return _this.table[k]; }));\n        return vector;\n    };\n    /**\n     * @return {?}\n     */\n    HashTable.prototype.getKeys = /**\n     * @return {?}\n     */\n    function () {\n        /** @type {?} */\n        var keys = Array.from(Object.keys(this.table), (/**\n         * @param {?} k\n         * @return {?}\n         */\n        function (k) { return k.substring(2); }));\n        return keys;\n    };\n    /**\n     * @param {?} key\n     * @return {?}\n     */\n    HashTable.prototype.has = /**\n     * @param {?} key\n     * @return {?}\n     */\n    function (key) {\n        if (typeof this.table['v_' + key] !== 'undefined') {\n            return true;\n        }\n        return false;\n    };\n    /**\n     * @param {?} key\n     * @return {?}\n     */\n    HashTable.prototype.remove = /**\n     * @param {?} key\n     * @return {?}\n     */\n    function (key) {\n        delete this.table['v_' + key];\n        return this;\n    };\n    /**\n     * @param {?} key\n     * @param {?} value\n     * @return {?}\n     */\n    HashTable.prototype.putArray = /**\n     * @param {?} key\n     * @param {?} value\n     * @return {?}\n     */\n    function (key, value) {\n        if (typeof this.table['a_' + key] === 'undefined') {\n            this.table['a_' + key] = [];\n        }\n        this.table['a_' + key].push(value);\n        return this;\n    };\n    /**\n     * @param {?} key\n     * @return {?}\n     */\n    HashTable.prototype.getArray = /**\n     * @param {?} key\n     * @return {?}\n     */\n    function (key) {\n        if (typeof this.table['a_' + key] === 'undefined') {\n            this.table['a_' + key] = [];\n        }\n        return this.table['a_' + key];\n    };\n    /**\n     * @param {?} key\n     * @param {?} value\n     * @return {?}\n     */\n    HashTable.prototype.removeArray = /**\n     * @param {?} key\n     * @param {?} value\n     * @return {?}\n     */\n    function (key, value) {\n        if (typeof this.table['a_' + key] !== 'undefined') {\n            this.table['a_' + key].splice(this.table['a_' + key].indexOf(value), 1);\n        }\n        return this;\n    };\n    /**\n     * @param {?} key\n     * @return {?}\n     */\n    HashTable.prototype.hasArray = /**\n     * @param {?} key\n     * @return {?}\n     */\n    function (key) {\n        if (typeof this.table['a_' + key] !== 'undefined') {\n            return true;\n        }\n        else {\n            return false;\n        }\n    };\n    /**\n     * @param {?} key\n     * @param {?} value\n     * @return {?}\n     */\n    HashTable.prototype.hasinArray = /**\n     * @param {?} key\n     * @param {?} value\n     * @return {?}\n     */\n    function (key, value) {\n        if (typeof this.table['a_' + key] !== 'undefined') {\n            if (this.table['a_' + key].indexOf(value) !== -1) {\n                return true;\n            }\n            return false;\n        }\n        else {\n            return false;\n        }\n    };\n    /**\n     * @return {?}\n     */\n    HashTable.prototype.size = /**\n     * @return {?}\n     */\n    function () {\n        return Object.keys(this.table).length;\n    };\n    /***************************************************/\n    // ForEach Function\n    // forEach(callback: function(key,value) )\n    // @callback: A Callback function use to iterate the Object  \n    //\n    // Iterate all objects Hashtable\n    // A used like arguments in the callback function\n    /***************************************************/\n    /***************************************************/\n    // ForEach Function\n    // forEach(callback: function(key,value) )\n    // @callback: A Callback function use to iterate the Object  \n    //\n    // Iterate all objects Hashtable\n    // A used like arguments in the callback function\n    /**\n     * ***********************************************\n     * @param {?} callback\n     * @return {?}\n     */\n    HashTable.prototype.forEach = /***************************************************/\n    // ForEach Function\n    // forEach(callback: function(key,value) )\n    // @callback: A Callback function use to iterate the Object  \n    //\n    // Iterate all objects Hashtable\n    // A used like arguments in the callback function\n    /**\n     * ***********************************************\n     * @param {?} callback\n     * @return {?}\n     */\n    function (callback) {\n        for (var key in this.table) {\n            callback(key.substring(2), this.table[key]);\n        }\n    };\n    return HashTable;\n}());\nif (false) {\n    /**\n     * @type {?}\n     * @private\n     */\n    HashTable.prototype.table;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: public_api.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * Generated from: angular-hashtable.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\nexport { HashTable };\n//# sourceMappingURL=angular-hashtable.js.map\n","import { SafeIndexComponent } from './components/safe/safe-index/safe-index.component';\r\nimport {NgModule} from '@angular/core';\r\nimport {Routes, RouterModule} from '@angular/router';\r\nimport { ServiceIndexComponent } from './components/services/service-index/service-index.component';\r\nimport { AccountComponent } from './account.component';\r\nimport { AcademicYearIndexComponent } from './components/academic-year-index/academic-year-index.component';\r\n\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: 'safe',\r\n    component: SafeIndexComponent\r\n  }, \r\n  {\r\n    path: \"setting\",\r\n    component: AccountComponent,\r\n    children: [\r\n      {\r\n        path: 'services',\r\n        component: ServiceIndexComponent\r\n      }, \r\n      {\r\n        path: 'academic_year_expenses',\r\n        component: AcademicYearIndexComponent\r\n      },\r\n    ]\r\n  },\r\n  {\r\n    path: '**',\r\n    redirectTo: '/',\r\n    pathMatch: 'full'\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [\r\n    RouterModule.forChild(routes)\r\n  ],\r\n  exports: [RouterModule]\r\n})\r\nexport class AccountRoutingModule {\r\n}\r\n","module.exports = \"<div class=\\\"row\\\">\\n\\n  <div class=\\\"col-md-3\\\">\\n\\n    <!-- navbar list -->\\n    <div class=\\\"box box-primary material-shadow\\\">\\n      <div class=\\\"box-body box-profile\\\">\\n        <img class=\\\"profile-user-img img-responsive img-circle\\\" style=\\\"width: 60%!important\\\" src=\\\"/assets/img/account_settings.gif\\\" alt=\\\"User profile picture\\\">\\n\\n        <h3 class=\\\"profile-username text-center\\\">{{ \\\"account_setting\\\" | trans }}</h3>\\n \\n\\n        <ul class=\\\"list-group list-group-unbordered\\\">\\n          <li class=\\\"list-group-item\\\">\\n            <a href=\\\"#\\\" routerLink='/account/setting/services' >\\n                <b>{{ \\\"services\\\" | trans }}</b> \\n                <a href=\\\"#\\\"  class=\\\"pull-left\\\">\\n                  <i class=\\\"fa fa-trophy\\\" ></i> \\n                </a>\\n            </a>\\n          </li> \\n          <li class=\\\"list-group-item\\\">\\n            <a href=\\\"#\\\" routerLink='/account/setting/academic_year_expenses' >\\n                <b>{{ \\\"academic_year_expenses\\\" | trans }}</b> \\n                <a href=\\\"#\\\"  class=\\\"pull-left\\\">\\n                  <i class=\\\"fa fa-money\\\" ></i> \\n                </a>\\n            </a>\\n          </li> \\n        </ul> \\n      </div>\\n      <!-- /.box-body -->\\n    </div>\\n    <!-- /.box -->\\n \\n  </div>\\n  <!-- /.col -->\\n  <div class=\\\"col-md-9\\\"> \\n      <router-outlet></router-outlet>\\n  </div>\\n  <!-- /.col -->\\n</div>\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FjY291bnQvYWNjb3VudC5jb21wb25lbnQuc2NzcyJ9 */\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-account',\n  templateUrl: './account.component.html',\n  styleUrls: ['./account.component.scss']\n})\nexport class AccountComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","import {NgModule} from '@angular/core';\r\nimport {AccountRoutingModule} from './account-routing.module';\r\nimport {SharedModule} from '../shared/shared.module';\r\nimport { ServiceIndexComponent } from './components/services/service-index/service-index.component';\r\nimport { ServiceTableComponent } from './components/services/service-table/service-table.component';\r\nimport { ServiceCreateComponent } from './components/services/service-create/service-create.component';\r\nimport { SafeIndexComponent } from './components/safe/safe-index/safe-index.component';\r\nimport { InstallmentComponent } from './components/safe/installment/installment.component';\r\nimport { StudentInstallmentComponent } from './components/safe/student-installment/student-installment.component';\r\nimport { StudentPaymentComponent } from './components/safe/student-payment/student-payment.component';\r\nimport { StudentServiceComponent } from './components/safe/student-service/student-service.component';\r\nimport { AvailableServiceComponent } from './components/safe/available-service/available-service.component';\r\nimport { AccountComponent } from './account.component';\r\nimport { DataTablesModule } from 'angular-datatables';\nimport { AcademicYearIndexComponent } from './components/academic-year-index/academic-year-index.component'; \r\n\r\n@NgModule({\r\n  declarations: [\r\n    ServiceIndexComponent,\r\n    ServiceTableComponent,\r\n    ServiceCreateComponent,\r\n    SafeIndexComponent,\r\n    InstallmentComponent,\r\n    StudentInstallmentComponent,\r\n    StudentPaymentComponent,\r\n    StudentServiceComponent,\r\n    AvailableServiceComponent,\r\n    AccountComponent,\r\n    AcademicYearIndexComponent \r\n  ],\r\n  imports: [\r\n    SharedModule,\r\n    AccountRoutingModule,\r\n    DataTablesModule\r\n  ]\r\n})\r\nexport class AccountModule {\r\n}\r\n","module.exports = \"<app-breadcrumb [breadcrumbList]=\\\"breadcrumbList\\\"></app-breadcrumb>\\n\\n<div class=\\\"box box-primary material-shadow w3-white table-responsive\\\" >\\n  <div class=\\\"box-header\\\">\\n    \\n    <button *ngIf=\\\"showRemoveButton\\\" (click)=\\\"removeServices()\\\" class=\\\"btn btn-danger\\\" style=\\\"margin: 5px\\\"  > \\n      <span class=\\\"fa fa-trash\\\" ></span>\\n    </button>\\n  </div>\\n  <table  class=\\\"table table-bordered text-center\\\">\\n    <tr>\\n      <td>{{ \\\"level\\\" | trans }}</td>\\n      <td>\\n        <select style=\\\"width: 100px\\\" class=\\\"form-control input-sm\\\" (change)=\\\"loadAcademicYearExpenses()\\\" [(ngModel)]=\\\"academicYearExpense.level_id\\\" >\\n          <option *ngFor=\\\"let item of levels\\\" value=\\\"{{ item.id }}\\\" >{{ item.name }}</option>\\n        </select>\\n      </td>\\n      <td>{{ \\\"division\\\" | trans }}</td>\\n      <td>\\n        <select readonly style=\\\"width: 100px\\\" class=\\\"form-control input-sm\\\" [(ngModel)]=\\\"academicYearExpense.division_id\\\" >\\n            <option *ngFor=\\\"let item of divisions\\\" value=\\\"{{ item.id }}\\\" >{{ item.name }}</option>\\n        </select>\\n      </td>\\n    </tr>\\n  </table>\\n  <br>\\n  <table  class=\\\"table table-bordered text-center\\\">\\n    <thead> \\n\\n      <tr>\\n        <th></th>\\n        <th>#</th>\\n        <th>{{ \\\"name\\\" | trans }}</th>\\n        <th>{{ \\\"priorty\\\" | trans }}</th> \\n        <th>{{ \\\"value\\\" | trans }}</th>\\n        <th>{{ \\\"term\\\" | trans }}</th>\\n        <th>{{ \\\"store\\\" | trans }}</th>\\n        <th>{{ \\\"discount\\\" | trans }}</th>\\n        <th></th>\\n      </tr>\\n    </thead>\\n\\n    <tbody *ngIf=\\\"academicYearExpense.details\\\" >\\n      <tr *ngFor=\\\"let item of academicYearExpense.details index as i\\\" >\\n        <td>\\n          <input type=\\\"checkbox\\\" style=\\\"margin: 0px!important\\\" class=\\\"w3-check\\\" (click)=\\\"toggleFromTrash(item.id)\\\"  >\\n        </td>\\n        <td>{{ i + 1 }}</td>\\n        <td>\\n            <input type=\\\"text\\\" class=\\\"form-control input-sm\\\" [(ngModel)]=\\\"item.name\\\"    > \\n        </td>\\n        <td>\\n            <input type=\\\"number\\\" class=\\\"form-control input-sm\\\" [(ngModel)]=\\\"item.priorty\\\"     >  \\n        </td>\\n        <td>\\n            <input type=\\\"number\\\" class=\\\"form-control input-sm\\\" [(ngModel)]=\\\"item.value\\\"      >  \\n        </td> \\n        <td> \\n            <select style=\\\"width: 100px\\\" class=\\\"form-control input-sm\\\" [(ngModel)]=\\\"item.term_id\\\"   >\\n                <option *ngFor=\\\"let row of terms\\\" value=\\\"{{ row.id }}\\\" >{{ row.name }}</option>\\n            </select> \\n        </td>\\n        <td>\\n            <input *ngIf=\\\"item.store\\\" readonly type=\\\"text\\\" class=\\\"form-control input-sm\\\" [(ngModel)]=\\\"item.store.name\\\"    > \\n            <input type=\\\"hidden\\\" class=\\\"form-control input-sm\\\" [(ngModel)]=\\\"item.store_id\\\"    >   \\n        </td>\\n        <td>\\n            <input type=\\\"number\\\" class=\\\"form-control input-sm\\\" [(ngModel)]=\\\"item.discount\\\"   >  \\n        </td> \\n        <td> \\n          <button class=\\\"btn btn-danger fa fa-trash\\\" (click)=\\\"removeRow(item, i)\\\" ></button>\\n        </td>\\n      </tr>\\n    </tbody>\\n  </table>\\n  <br>\\n  <button class=\\\"btn btn-default\\\" (click)=\\\"addRow()\\\" style=\\\"margin: 5px\\\"  > \\n    <span class=\\\"fa fa-plus\\\" ></span> \\n  </button> \\n  <button class=\\\"btn btn-primary\\\" [disabled]=\\\"updateItem\\\" (click)=\\\"viewChanges()\\\" style=\\\"margin: 5px\\\"  > \\n    {{ \\\"save\\\" | trans }}\\n  </button> \\n</div>\\n\\n \\n<!-- remove modal -->\\n<div class=\\\"w3-modal w3-block\\\" *ngIf=\\\"showRemoveModal\\\"  role=\\\"dialog\\\">\\n    <div class=\\\"modal-dialog\\\" role=\\\"document\\\">\\n      <div class=\\\"modal-content\\\">\\n        <div class=\\\"modal-header\\\">\\n          <h4 class=\\\"modal-title\\\">{{ \\\"remove services\\\" | trans }}</h4>\\n        </div>\\n        <div class=\\\"modal-body text-center\\\">\\n            <i class=\\\"fa fa-spinner fa-spin w3-jumbo w3-text-indigo w3-center\\\" ></i>\\n            <br>\\n            {{ trashList.size() }} - {{ \\\"removed\\\" | trans }} {{ trashList.size() + removed.length }}\\n        </div>\\n        <div class=\\\"modal-footer\\\"> \\n        </div>\\n      </div><!-- /.modal-content -->\\n    </div><!-- /.modal-dialog -->\\n  </div><!-- /.modal -->\\n \"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FjY291bnQvY29tcG9uZW50cy9hY2FkZW1pYy15ZWFyLWluZGV4L2FjYWRlbWljLXllYXItaW5kZXguY29tcG9uZW50LnNjc3MifQ== */\""," \nimport { Component, OnInit } from '@angular/core';\nimport { Cache } from 'src/app/shared/cache';\nimport { Subject } from 'rxjs';\nimport { HashTable } from 'angular-hashtable';   \nimport { Helper } from '../../../shared/helper'; \nimport { Message } from '../../../shared/message';\nimport { AcademicYearService } from '../../services/academic-year.service';\nimport { LevelService } from '../../services/level.service';\nimport { DivisionService } from '../../services/division.service';\nimport { TermService } from '../../services/term.service';\n\n@Component({\n  selector: 'app-academic-year-index',\n  templateUrl: './academic-year-index.component.html',\n  styleUrls: ['./academic-year-index.component.scss']\n})\nexport class AcademicYearIndexComponent implements OnInit {\n\n  // datatable options\n  public dtOptions: any;\n\n  // datable trigger\n  dtTrigger: Subject<any> = new Subject();\n\n  // Rows list\n  public academicYearExpense: any = {\n    level_id: 1\n  };\n\n  // init breadcrum\n  public breadcrumbList = [];\n\n  public self: any;\n\n  // show create modal\n  public showCreateModal = false;\n\n  // remove options\n  public showRemoveButton = false;\n  public showRemoveModal = false;\n  public trashList = new HashTable<any, any>();\n  public removed = [];\n\n  //\n  public levels: any[];\n  public divisions: any[];\n  public terms: any[];\n\n  //\n  public updateItem: boolean;\n\n  constructor(private academicService: AcademicYearService) {\n    this.self = this;\n \n    // init breadcrum\n    this.breadcrumbList = [\n      {name: 'home', url: '/'},\n      {name: Helper.trans('academic_years_expenses')}\n    ];\n  }\n\n  setAccountSettings() {\n    this.levels = Cache.get(LevelService.LEVEL_PREFIX);\n    this.divisions = Cache.get(DivisionService.DIVISION_PREFIX);\n    this.terms = Cache.get(TermService.TERPM_PREFIX);\n  }\n \n  toggleFromTrash(id) {\n    if (this.trashList.has(id)) {\n      this.trashList.remove(id);\n    }\n    else {\n      this.trashList.put(id, id);\n    }\n \n    if (this.trashList.size() > 0) \n      this.showRemoveButton = true;\n    else\n      this.showRemoveButton = false;\n  }\n\n  removeRows() {\n    this.showRemoveModal = true;\n    const queue = this.trashList.getKeys();\n    if (queue.length > 0) {\n      const id = queue.pop();\n      this.academicService.destroy(id).subscribe(()=> {\n        this.removed.push(id);\n        this.trashList.remove(id);\n        //\n        this.removeRows();\n      });\n    } else {\n      this.removed = [];\n      this.showRemoveButton = false;\n      this.showRemoveModal = false;\n      //\n      this.dtTrigger.unsubscribe();   \n      this.loadAcademicYearExpenses();\n    }\n  }\n\n  loadAcademicYearExpenses() {\n    let data = {\n      level_id: this.academicYearExpense.level_id\n    }; \n    this.academicService.get(data).subscribe( (res: any) => {\n      this.academicYearExpense = res; \n      console.log(this.academicYearExpense.details);\n    }); \n  }\n\n  addRow() {\n    let item = {\n      value: 0,\n      discount: 0,\n      academic_year_expense_id: this.academicYearExpense.id\n    };\n    this.academicYearExpense.details.push(item);\n  }\n\n  removeRow(item, index) {\n    Message.confirm(Helper.trans('are your sure'), () => { \n        if (item.id) {\n          this.academicService.destroy(item.id).subscribe((r) => {\n            const data: any = r;\n            if (data.status == 1) {\n              this.academicYearExpense.details.splice(index,index + 1);\n              this.loadAcademicYearExpenses(); \n              Message.success(data.message);\n            } else {\n              Message.error(data.message);\n            }\n          }); \n        } else {\n          this.academicYearExpense.details.splice(index,index + 1); \n        }\n    });\n  }\n\n  viewChanges() {\n    this.updateAcademicYearExpense();\n  }\n  \n\n  updateAcademicYearExpense() { \n    this.updateItem = true;\n     \n    this.academicService.update(this.academicYearExpense).subscribe((r) => {\n      const data: any = r;\n      this.loadAcademicYearExpenses();\n      Message.success(data.message);\n      this.updateItem = false;\n    });\n  }\n\n  ngOnInit() {\n    this.setAccountSettings();\n    this.loadAcademicYearExpenses(); \n  }\n\n}\n","module.exports = \"<div class=\\\"modal \\\" id=\\\"studentAvailableServices\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\"   >\\n  <div class=\\\"modal-dialog modal-\\\" role=\\\"document\\\">\\n    <div class=\\\"modal-content w3-animate-top\\\">\\n      <div class=\\\"modal-header\\\">\\n        <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\" aria-label=\\\"Close\\\"><span aria-hidden=\\\"true\\\">&times;</span></button>\\n        <h4 class=\\\"modal-title text-center\\\">{{ \\\"student available services\\\" | trans }}</h4>\\n      </div>\\n      <div class=\\\"modal-body\\\">\\n        <table class=\\\"table table-bordered\\\" >\\n          <thead>\\n            <tr class=\\\"w3-dark-gray\\\" >\\n              <th>{{ \\\"#\\\" | trans }}</th>\\n              <th>{{ \\\"name\\\" | trans }}</th>\\n              <th>{{ \\\"additional_value\\\" | trans }}</th>\\n              <th>{{ \\\"value\\\" | trans }}</th>\\n              <th>{{ \\\"total\\\" | trans }}</th>\\n              <th></th>\\n            </tr>\\n          </thead>\\n          <tbody>\\n            <tr *ngFor=\\\"let item of services index as i\\\" >\\n              <td>{{ i + 1 }}</td>\\n              <td>{{ item.name }}</td>\\n              <td>{{ item.additional_value | currency: ' EGP ' }}</td>\\n              <td>{{ item.value | currency: ' EGP ' }}</td>\\n              <td>{{ (item.value + item.additional_value) | currency: ' EGP ' }}</td>\\n              <td>\\n                <input type=\\\"checkbox\\\" class=\\\"w3-check\\\" >\\n              </td>\\n            </tr>\\n            <tr>\\n              <td>{{ \\\"total\\\" | trans }}</td>\\n              <td></td>\\n              <td></td>\\n              <td></td>\\n              <td>{{ total | currency: ' EGP ' }}</td>\\n              <td></td>\\n            </tr>\\n          </tbody>\\n        </table>\\n      </div>\\n      <div class=\\\"modal-footer\\\">\\n        <button type=\\\"button\\\" class=\\\"btn btn-default\\\" onclick=\\\"document.getElementById('studentAvailableServices').style.display='none'\\\" >{{ \\\"close\\\" | trans }}</button>\\n      </div>\\n    </div><!-- /.modal-content -->\\n  </div><!-- /.modal-dialog -->\\n</div><!-- /.modal -->\\n\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FjY291bnQvY29tcG9uZW50cy9zYWZlL2F2YWlsYWJsZS1zZXJ2aWNlL2F2YWlsYWJsZS1zZXJ2aWNlLmNvbXBvbmVudC5zY3NzIn0= */\"","import { Component, OnInit, SimpleChanges, OnChanges, Input } from '@angular/core'; \n\n@Component({\n  selector: 'app-available-service',\n  templateUrl: './available-service.component.html',\n  styleUrls: ['./available-service.component.scss']\n})\nexport class AvailableServiceComponent implements OnInit {\n\n  public total = 0;\n  @Input() services: any;\n \n\n  constructor() { }\n\n  calculateTotal() {\n    this.total = 0;\n    if (this.services)\n    this.services.forEach(element => {\n      this.total += element.value;\n      this.total += element.additional_value;\n    });\n  } \n\n  ngOnInit() { \n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    this.calculateTotal(); \n  }\n}\n","module.exports = \"<div class=\\\"modal \\\" id=\\\"installmentSection\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\"   >\\r\\n  <div class=\\\"modal-dialog modal-\\\" role=\\\"document\\\">\\r\\n    <div class=\\\"modal-content w3-animate-top\\\">\\r\\n      <div class=\\\"modal-header\\\">\\r\\n        <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\" aria-label=\\\"Close\\\"><span aria-hidden=\\\"true\\\">&times;</span></button>\\r\\n        <h4 class=\\\"modal-title text-center\\\">{{ \\\"installment\\\" | trans }}</h4>\\r\\n      </div>\\r\\n      <div class=\\\"modal-body\\\">\\r\\n        <table class=\\\"table\\\">\\r\\n          <tr>\\r\\n            <td>\\r\\n              {{ \\\"old balance\\\" | trans }}\\r\\n            </td>\\r\\n            <td>\\r\\n              <input style=\\\"width: 60px\\\" class=\\\"custom-input w3-input border-bottom-dashed input-sm\\\" readonly [(ngModel)]=\\\"student.old_balance\\\" >\\r\\n            </td>\\r\\n            <td>\\r\\n              {{ \\\"current balance\\\" | trans }}\\r\\n            </td>\\r\\n            <td>\\r\\n              <input style=\\\"width: 60px\\\" class=\\\"custom-input w3-input border-bottom-dashed input-sm\\\" readonly [(ngModel)]=\\\"student.current_balance\\\" >\\r\\n            </td>\\r\\n            <td>\\r\\n              {{ \\\"paids\\\" | trans }}\\r\\n            </td>\\r\\n            <td>\\r\\n              <input style=\\\"width: 60px\\\" class=\\\"custom-input w3-input border-bottom-dashed input-sm\\\" readonly [(ngModel)]=\\\"student.paids\\\" >\\r\\n            </td>\\r\\n          </tr>\\r\\n        </table>\\r\\n        <table class=\\\"table table-bordered\\\" >\\r\\n          <thead>\\r\\n            <tr class=\\\"w3-dark-gray\\\" >\\r\\n              <th>{{ \\\"#\\\" | trans }}</th>\\r\\n              <th>{{ \\\"value\\\" | trans }}</th>\\r\\n              <th>{{ \\\"date\\\" | trans }}</th>\\r\\n              <th></th>\\r\\n            </tr>\\r\\n          </thead>\\r\\n          <tbody>\\r\\n            <tr *ngFor=\\\"let item of studentInstallments index as i\\\"    >\\r\\n              <ng-container *ngIf='!item.deleted' >\\r\\n                  <td >{{ i + 1 }}</td>\\r\\n                  <td>\\r\\n                    <input class=\\\"form-control input-sm\\\" [readOnly]=\\\"item.paid == 1\\\" style=\\\"width: 60px\\\" [(ngModel)]=\\\"item.value\\\" >\\r\\n                  </td>\\r\\n                  <td>\\r\\n                    <input type=\\\"date\\\" class=\\\"form-control input-sm\\\" [readOnly]=\\\"item.paid == 1\\\" style=\\\"width: 150px\\\" [(ngModel)]=\\\"item.date\\\" >\\r\\n                  </td>\\r\\n                  <td>\\r\\n                    <button *ngIf=\\\"item.paid == 0\\\" (click)=\\\"removeRow(item)\\\" class=\\\"btn btn-default fa fa-trash w3-text-red\\\" ></button>\\r\\n                  </td>\\r\\n              </ng-container> \\r\\n            </tr>\\r\\n          </tbody>\\r\\n        </table>\\r\\n        <button class=\\\"btn btn-default fa fa-plus\\\" (click)=\\\"addRow()\\\" ></button>\\r\\n        <table class=\\\"table\\\" >\\r\\n          <tr>\\r\\n            <td>{{ \\\"total\\\" | trans }}</td>\\r\\n            <td></td>\\r\\n            <td></td>\\r\\n            <td>{{ total | currency: ' جنيه ' }}</td>\\r\\n          </tr>\\r\\n        </table>\\r\\n      </div>\\r\\n      <div class=\\\"modal-footer\\\">\\r\\n        <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" (click)=\\\"performUpdate()\\\" >{{ \\\"save\\\" | trans }}</button>\\r\\n        <button type=\\\"button\\\" class=\\\"btn btn-default\\\" onclick=\\\"document.getElementById('installmentSection').style.display='none'\\\" >{{ \\\"close\\\" | trans }}</button>\\r\\n      </div>\\r\\n    </div><!-- /.modal-content -->\\r\\n  </div><!-- /.modal-dialog -->\\r\\n</div><!-- /.modal -->\\r\\n\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FjY291bnQvY29tcG9uZW50cy9zYWZlL2luc3RhbGxtZW50L2luc3RhbGxtZW50LmNvbXBvbmVudC5zY3NzIn0= */\"","import { Message } from './../../../../shared/message';\r\nimport { Auth } from './../../../../shared/auth';\r\nimport { StudentAccountService } from './../../../services/student-account.service';\r\nimport { Component, OnInit, SimpleChanges, OnChanges, Input, Output } from '@angular/core';\r\nimport { Helper } from '../../../../shared/helper';\r\n\r\n@Component({\r\n  selector: 'app-installment',\r\n  templateUrl: './installment.component.html',\r\n  styleUrls: ['./installment.component.scss']\r\n})\r\nexport class InstallmentComponent implements OnInit {\r\n\r\n  public total = 0;\r\n  public studentInstallmentData: any = {};\r\n  @Input() studentInstallments: any[]; \r\n  @Input() student: any;\r\n  @Input() updateStudent: any;\r\n  \r\n\r\n  constructor(private studentAccountService: StudentAccountService) { }\r\n\r\n  /**\r\n   * add row in the data and in installments arr\r\n   */\r\n  addRow() {\r\n    const item = this.createEmptyInstallmentObject();//this.studentInstallments[this.studentInstallments.length - 1];\r\n\r\n    this.studentInstallments.push(item);\r\n  }\r\n\r\n  /**\r\n   * remove row from table and add deleted attribute\r\n   * item.delted = 1\r\n   * @param item \r\n   */\r\n  removeRow(item: any) {\r\n    item.deleted = 1;\r\n  }\r\n\r\n  /**\r\n   * get installment type \r\n   * @return type string\r\n   */\r\n  getInstallmentType() {\r\n    return this.student.old_balance > 0? \"old\" : \"new\";\r\n  }\r\n\r\n  /**\r\n   * build request data of studentAccountService \r\n   */\r\n  buildInstallmentRequestData() {\r\n    this.studentInstallmentData.student_id = this.student.id;\r\n    this.studentInstallmentData.type = this.getInstallmentType();\r\n    this.studentInstallmentData.api_token = Auth.getApiToken();\r\n    this.studentInstallmentData.data = this.studentInstallments;\r\n  }\r\n\r\n  /**\r\n   * update installmenst of student \r\n   */\r\n  update() {\r\n    // update data of the api\r\n    this.buildInstallmentRequestData();\r\n    this.studentAccountService.updateStudentInstallments(this.studentInstallmentData).subscribe((r) => {\r\n      const data: any = r;\r\n      if (data.status == 1) {\r\n        Message.success(data.message);\r\n        this.updateStudent();\r\n      } else {\r\n        Message.error(data.message);\r\n      }\r\n    });\r\n\r\n  }\r\n\r\n  /**\r\n   * validate on installments arr\r\n   */\r\n  validate() {\r\n    let valid = true;\r\n    this.studentInstallments.forEach(element => {\r\n      if (!element.date || element.price <= 0)\r\n        valid = false;\r\n    });\r\n\r\n    return valid;\r\n  }\r\n\r\n  /**\r\n   * perform update \r\n   * validate and update\r\n   */\r\n  performUpdate() {\r\n    if (!this.validate())\r\n      return Message.error(Helper.trans('please enter all data'));\r\n    this.update();\r\n  }\r\n\r\n  /**\r\n   * create empty object of installment to add new row \r\n   */\r\n  createEmptyInstallmentObject() {\r\n    return {\r\n      date: '',\r\n      value: 0,\r\n      paid: 0\r\n    };\r\n  }\r\n\r\n  /**\r\n   * calculate total of installments\r\n   */\r\n  calculateTotal() {\r\n    this.total = 0;\r\n    this.studentInstallments.forEach(element => {\r\n      this.total += element.value;\r\n    });\r\n  }\r\n\r\n \r\n  ngOnInit() {\r\n    this.updateStudent();\r\n  }\r\n\r\n  ngOnChanges(changes: SimpleChanges): void {\r\n    this.calculateTotal();\r\n  }\r\n\r\n}\r\n","module.exports = \"<div class=\\\"row\\\">\\r\\n  <div class=\\\"col-lg-10 col-md-10 col-sm-12\\\">\\r\\n    <div class=\\\"w3-white material-shadow safe-box\\\">\\r\\n      <div class=\\\"safe-box-header w3-xlarge\\\">\\r\\n        {{ \\\"get money from safe\\\" | trans }}\\r\\n      </div>\\r\\n      <br>\\r\\n      <div class=\\\"border-bottom-dashed\\\" ></div>\\r\\n      <br>\\r\\n\\r\\n      <div class=\\\"safe-box-body row\\\" >\\r\\n\\r\\n        <div class=\\\"col-lg-3 col-md-3 col-sm-12\\\" >\\r\\n          <img [src]=\\\"safeObject.image\\\" class=\\\"w3-block w3-round border-gray\\\" >\\r\\n          <br>\\r\\n          <div class=\\\"custom-panel w3-display-container w3-round\\\" style=\\\"padding: 5px\\\" >\\r\\n\\r\\n            <div \\r\\n            *ngIf=\\\"studentSearchId\\\"\\r\\n            class=\\\"alert alert-danger w3-block btn-margin-bottom text-center\\\" \\r\\n            [innerHTML]=\\\"safeObject.notes\\\" >\\r\\n\\r\\n            </div>\\r\\n            <button class=\\\"btn btn-default w3-block small-shadow btn-margin-bottom\\\" [disabled]=\\\"!studentSearchId\\\"  onclick=\\\"document.getElementById('studentPayments').style.display='block'\\\" >{{ \\\"student payments\\\" | trans }}</button>\\r\\n\\r\\n            <button class=\\\"btn btn-default w3-block small-shadow btn-margin-bottom\\\" [disabled]=\\\"!studentSearchId\\\"   onclick=\\\"document.getElementById('studentServices').style.display='block'\\\"  >{{ \\\"student services\\\" | trans }}</button>\\r\\n\\r\\n            <button class=\\\"btn btn-default w3-block small-shadow btn-margin-bottom\\\" [disabled]=\\\"!studentSearchId\\\"   onclick=\\\"document.getElementById('studentInstallment').style.display='block'\\\"  >{{ \\\"student installments\\\" | trans }}</button>\\r\\n\\r\\n            <button class=\\\"btn btn-default w3-block small-shadow btn-margin-bottom\\\" [disabled]=\\\"!studentSearchId\\\"   onclick=\\\"document.getElementById('installmentSection').style.display='block'\\\"   >{{ \\\"installments\\\" | trans }}</button>\\r\\n\\r\\n            <button class=\\\"btn btn-default w3-block small-shadow btn-margin-bottom\\\" [disabled]=\\\"!studentSearchId\\\"  >{{ \\\"write note\\\" | trans }}</button>\\r\\n          </div>\\r\\n\\r\\n        </div>\\r\\n\\r\\n        <div class=\\\"col-lg-9 col-md-9 col-sm-12\\\" >\\r\\n\\r\\n          <div class=\\\"custom-panel w3-display-container w3-round\\\">\\r\\n            <div class=\\\"custom-panel-title\\\" >{{ \\\"search\\\" | trans }}</div>\\r\\n\\r\\n            <div class=\\\"custom-panel-body w3-display-container\\\"  >\\r\\n              <input class=\\\"w3-round-xxlarge w3-white w3-input border-gray search-input \\\" (keyup)=\\\"searchInputEvent()\\\" [(ngModel)]=\\\"searchKey\\\" >\\r\\n\\r\\n              <button\\r\\n              (click)=\\\"loadStudentAccountInfo(studentSearchId)\\\"\\r\\n              class=\\\"btn btn-default small-shadow w3-margin-left w3-margin-right w3-round-xxlarge\\\"  >{{ \\\"search\\\" | trans }}</button>\\r\\n\\r\\n              <div class=\\\"w3-display-topleft w3-padding\\\" *ngIf=\\\"studentSearchDialogLoader\\\" style=\\\"top: 12px;left:30%;z-index:10;\\\" >\\r\\n                <span class=\\\"fa fa-spin fa-spinner w3-text-indigo\\\" ></span>\\r\\n              </div>\\r\\n\\r\\n              <div class=\\\"w3-display-topright w3-white material-shadow\\\" *ngIf=\\\"studentSearchDialogShow\\\" style=\\\"top: 47px;right:11px;z-index:10;width: 60%\\\" >\\r\\n                <div class=\\\"w3-display-conitainer\\\">\\r\\n                  <span class=\\\"w3-display-topright w3-button fa fa-close\\\" (click)=\\\"studentSearchDialogShow=false\\\" ></span>\\r\\n                  <br>\\r\\n                  <ul class=\\\"w3-ul\\\" >\\r\\n                    <li *ngFor=\\\"let item of students\\\" style=\\\"cursor: pointer;\\\" class=\\\"w3-hover-light-gray w3-block text-right\\\"  >\\r\\n                      <div class=\\\"media\\\" (click)=\\\"selectStudent(item)\\\" >\\r\\n                        <div class=\\\"media-left\\\">\\r\\n                          <a href=\\\"#\\\">\\r\\n                            <span class=\\\"fa fa-user-circle w3-text-indigo w3-large\\\" ></span>\\r\\n                          </a>\\r\\n                        </div>\\r\\n                        <div class=\\\"media-body\\\">\\r\\n                          <h4 class=\\\"media-heading\\\" [innerHTML]=\\\"item.name\\\" ></h4>\\r\\n                          <span [innerHTML]=\\\"item.code\\\" class=\\\"w3-large\\\" ></span>\\r\\n                        </div>\\r\\n                      </div>\\r\\n                    </li>\\r\\n                  </ul>\\r\\n                </div>\\r\\n              </div>\\r\\n            </div>\\r\\n\\r\\n          </div>\\r\\n\\r\\n          <div class=\\\"custom-panel w3-display-container w3-round\\\">\\r\\n            <div class=\\\"custom-panel-title\\\" >{{ \\\"student info\\\" | trans }}</div>\\r\\n\\r\\n            <div class=\\\"custom-panel-body\\\"  >\\r\\n              <div class=\\\"row\\\">\\r\\n                <div class=\\\"col-lg-6 col-md-6 col-sm-12\\\">\\r\\n                  <table class=\\\"table\\\" >\\r\\n                    <tr>\\r\\n                      <th>{{ \\\"student name\\\" | trans }}</th>\\r\\n                      <td>\\r\\n                        <input class=\\\"custom-input w3-input border-bottom-dashed input-sm\\\" readonly [(ngModel)]=\\\"safeObject.name\\\" >\\r\\n                      </td>\\r\\n                    </tr>\\r\\n                    <tr>\\r\\n                      <th>{{ \\\"student code\\\" | trans }}</th>\\r\\n                      <td>\\r\\n                        <input class=\\\"custom-input w3-input border-bottom-dashed input-sm\\\" readonly [(ngModel)]=\\\"safeObject.code\\\" >\\r\\n                      </td>\\r\\n                    </tr>\\r\\n                    <tr>\\r\\n                      <th>{{ \\\"national id\\\" | trans }}</th>\\r\\n                      <td>\\r\\n                        <input class=\\\"custom-input w3-input border-bottom-dashed input-sm\\\" readonly [(ngModel)]=\\\"safeObject.national_id\\\" >\\r\\n                      </td>\\r\\n                    </tr>\\r\\n                    <tr>\\r\\n                      <th>{{ \\\"gpa\\\" | trans }}</th>\\r\\n                      <td>\\r\\n                        <input class=\\\"custom-input w3-input border-bottom-dashed input-sm\\\" readonly [(ngModel)]=\\\"safeObject.gpa\\\" >\\r\\n                      </td>\\r\\n                    </tr>\\r\\n                  </table>\\r\\n                </div>\\r\\n                <div class=\\\"col-lg-6 col-md-6 col-sm-12\\\">\\r\\n                  <table class=\\\"table\\\" >\\r\\n                    <tr>\\r\\n                      <th>{{ \\\"level\\\" | trans }}</th>\\r\\n                      <td>\\r\\n                        <input class=\\\"custom-input w3-input border-bottom-dashed input-sm\\\" readonly *ngIf=\\\"safeObject.level\\\" [(ngModel)]=\\\"safeObject.level.name\\\" >\\r\\n                      </td>\\r\\n                    </tr>\\r\\n                    <tr>\\r\\n                      <th>{{ \\\"department\\\" | trans }}</th>\\r\\n                      <td>\\r\\n                        <input class=\\\"custom-input w3-input border-bottom-dashed input-sm\\\" readonly *ngIf=\\\"safeObject.division\\\" [(ngModel)]=\\\"safeObject.division.name\\\" >\\r\\n                      </td>\\r\\n                    </tr>\\r\\n                    <tr>\\r\\n                      <th>{{ \\\"case constraint\\\" | trans }}</th>\\r\\n                      <td>\\r\\n                        <input class=\\\"custom-input w3-input border-bottom-dashed input-sm\\\" readonly *ngIf=\\\"safeObject.case_constraint\\\" [(ngModel)]=\\\"safeObject.case_constraint.name\\\" >\\r\\n                      </td>\\r\\n                    </tr>\\r\\n                    <tr>\\r\\n                      <th>{{ \\\"constraint status\\\" | trans }}</th>\\r\\n                      <td>\\r\\n                        <input class=\\\"custom-input w3-input border-bottom-dashed input-sm\\\" readonly *ngIf=\\\"safeObject.constraint_status\\\" [(ngModel)]=\\\"safeObject.constraint_status.name\\\" >\\r\\n                      </td>\\r\\n                    </tr>\\r\\n                  </table>\\r\\n                </div>\\r\\n              </div>\\r\\n            </div>\\r\\n\\r\\n          </div>\\r\\n\\r\\n          <div class=\\\"custom-panel w3-display-container w3-round\\\">\\r\\n            <div class=\\\"custom-panel-title\\\" >{{ \\\"payment info\\\" | trans }}</div>\\r\\n\\r\\n            <div class=\\\"custom-panel-body\\\"  >\\r\\n              <div class=\\\"row\\\">\\r\\n                <div class=\\\"col-lg-6 col-md-6 col-sm-12\\\">\\r\\n                  <table class=\\\"table\\\" >\\r\\n                    <tr>\\r\\n                      <th>{{ \\\"date\\\" | trans }}</th>\\r\\n                      <td>\\r\\n                        <input type=\\\"date\\\" class=\\\"custom-input w3-input border-bottom-dashed input-sm\\\" readonly [(ngModel)]=\\\"safeObject.date\\\" >\\r\\n                      </td>\\r\\n                    </tr>\\r\\n                    <tr>\\r\\n                      <th>{{ \\\"required value\\\" | trans }}</th>\\r\\n                      <td>\\r\\n                        <input class=\\\"custom-input w3-input border-bottom-dashed input-sm\\\" readonly [(ngModel)]=\\\"safeObject.paid_value\\\" >\\r\\n                      </td>\\r\\n                    </tr>\\r\\n                    <tr>\\r\\n                      <th>{{ \\\"value\\\" | trans }}</th>\\r\\n                      <td>\\r\\n                        <input class=\\\"custom-input w3-input border-bottom-dashed input-sm\\\" readonly [(ngModel)]=\\\"safeObject.paid_value\\\" >\\r\\n                      </td>\\r\\n                    </tr>\\r\\n                  </table>\\r\\n                </div>\\r\\n                <div class=\\\"col-lg-6 col-md-6 col-sm-12\\\">\\r\\n                  <table class=\\\"table\\\" >\\r\\n                    <tr>\\r\\n                      <th>{{ \\\"old balance\\\" | trans }}</th>\\r\\n                      <td>\\r\\n                        <input class=\\\"custom-input w3-input border-bottom-dashed input-sm\\\" readonly [(ngModel)]=\\\"safeObject.old_balance\\\" >\\r\\n                      </td>\\r\\n                    </tr>\\r\\n                    <tr>\\r\\n                      <th>{{ \\\"current balance\\\" | trans }}</th>\\r\\n                      <td>\\r\\n                        <input class=\\\"custom-input w3-input border-bottom-dashed input-sm\\\" readonly  [(ngModel)]=\\\"safeObject.current_balance\\\" >\\r\\n                      </td>\\r\\n                    </tr>\\r\\n                    <tr>\\r\\n                      <th>{{ \\\"paid value\\\" | trans }}</th>\\r\\n                      <td>\\r\\n                        <input class=\\\"custom-input w3-input border-bottom-dashed input-sm\\\" readonly [(ngModel)]=\\\"safeObject.paids\\\" >\\r\\n                      </td>\\r\\n                    </tr>\\r\\n                  </table>\\r\\n                </div>\\r\\n              </div>\\r\\n            </div>\\r\\n\\r\\n          </div>\\r\\n          <div class=\\\"custom-panel w3-display-container w3-round\\\">\\r\\n            <div class=\\\"custom-panel-body\\\"  >\\r\\n              <button class=\\\"btn btn-default small-shadow w3-margin-left\\\" [disabled]=\\\"!studentSearchId\\\"   (click)=\\\"performPay()\\\" >{{ \\\"save & print\\\" | trans }}</button>\\r\\n              <button class=\\\"btn btn-default small-shadow w3-margin-left\\\" [disabled]=\\\"!studentSearchId\\\"   onclick=\\\"document.getElementById('studentAvailableServices').style.display='block'\\\"  >{{ \\\"services\\\" | trans }}</button>\\r\\n              <button class=\\\"btn btn-default small-shadow w3-margin-left\\\" >{{ \\\"exit\\\" | trans }}</button>\\r\\n            </div>\\r\\n\\r\\n          </div>\\r\\n        </div>\\r\\n\\r\\n\\r\\n\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n\\r\\n\\r\\n<!-- student installments modal -->\\r\\n<app-student-installment [installments]=\\\"safeObject.installments? safeObject.installments : []\\\" [showStudentInstallment]=\\\"showStudentInstallment\\\" ></app-student-installment>\\r\\n\\r\\n<!-- student payments modal -->\\r\\n<app-student-payment [payments]=\\\"safeObject.payments? safeObject.payments : []\\\" ></app-student-payment>\\r\\n\\r\\n<!-- student services modal -->\\r\\n<app-student-service [services]=\\\"safeObject.services? safeObject.services : []\\\"  ></app-student-service>\\r\\n\\r\\n<!-- student services modal -->\\r\\n<app-installment [student]=\\\"safeObject\\\" [updateStudent]=\\\"updateStudent\\\" [studentInstallments]=\\\"safeObject.installments? safeObject.installments : []\\\" ></app-installment>\\r\\n\\r\\n<!-- student services modal -->\\r\\n<app-available-service [services]=\\\"availableServices\\\" ></app-available-service>\\r\\n\\r\\n\\r\\n\\r\\n\"","module.exports = \".safe-box {\\n  padding: 10px; }\\n\\n.border-bottom-dashed {\\n  border-bottom: 2px dashed gray !important; }\\n\\n.border-dashed {\\n  border: 2px dashed lightgray !important; }\\n\\n.btn-margin-bottom {\\n  margin-bottom: 6px !important; }\\n\\n.custom-panel {\\n  border: 2px dashed lightgray !important;\\n  margin-bottom: 15px !important; }\\n\\n.custom-panel-title {\\n  position: absolute !important;\\n  right: 10px !important;\\n  top: -13px !important;\\n  width: auto !important;\\n  background-color: white !important;\\n  padding-left: 10px !important;\\n  padding-right: 10px !important; }\\n\\n.custom-panel-body {\\n  padding: 10px !important; }\\n\\n.small-shadow {\\n  box-shadow: 0 1px 1px 0px rgba(0, 0, 0, 0.3) !important; }\\n\\n.search-input {\\n  min-width: 70% !important; }\\n\\n.border-gray {\\n  border: 1px solid gray !important; }\\n\\n.custom-input {\\n  min-width: 120px; }\\n\\n.modal {\\n  overflow: auto !important; }\\n\\n/*\\r\\n  custom button style\\r\\n*/\\n\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvYWNjb3VudC9jb21wb25lbnRzL3NhZmUvc2FmZS1pbmRleC9FOlxccHJvamVjdHNcXHNhbXNhXFxzYW1zYUZyb250RW5kL3NyY1xcYXBwXFxhY2NvdW50XFxjb21wb25lbnRzXFxzYWZlXFxzYWZlLWluZGV4XFxzYWZlLWluZGV4LmNvbXBvbmVudC5zY3NzIiwic3JjL2FwcC9hY2NvdW50L2NvbXBvbmVudHMvc2FmZS9zYWZlLWluZGV4L3NhZmUtaW5kZXguY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSxhQUNGLEVBQUE7O0FBRUE7RUFDRSx5Q0FBd0MsRUFBQTs7QUFHMUM7RUFDRSx1Q0FBc0MsRUFBQTs7QUFHeEM7RUFDRSw2QkFBNEIsRUFBQTs7QUFHOUI7RUFDRSx1Q0FBc0M7RUFDdEMsOEJBQTZCLEVBQUE7O0FBSS9CO0VBQ0UsNkJBQTRCO0VBQzVCLHNCQUFxQjtFQUNyQixxQkFBb0I7RUFDcEIsc0JBQXFCO0VBQ3JCLGtDQUFpQztFQUNqQyw2QkFBNEI7RUFDNUIsOEJBQTZCLEVBQUE7O0FBRy9CO0VBQ0Usd0JBQXVCLEVBQUE7O0FBR3pCO0VBQ0UsdURBQW1ELEVBQUE7O0FBR3JEO0VBQ0UseUJBQXdCLEVBQUE7O0FBRzFCO0VBQ0UsaUNBQWdDLEVBQUE7O0FBR2xDO0VBQ0UsZ0JBQ0YsRUFBQTs7QUFFQTtFQUNFLHlCQUF3QixFQUFBOztBQUUxQjs7Q0NWQyIsImZpbGUiOiJzcmMvYXBwL2FjY291bnQvY29tcG9uZW50cy9zYWZlL3NhZmUtaW5kZXgvc2FmZS1pbmRleC5jb21wb25lbnQuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIi5zYWZlLWJveCB7XHJcbiAgcGFkZGluZzogMTBweFxyXG59XHJcblxyXG4uYm9yZGVyLWJvdHRvbS1kYXNoZWQge1xyXG4gIGJvcmRlci1ib3R0b206IDJweCBkYXNoZWQgZ3JheSFpbXBvcnRhbnQ7XHJcbn1cclxuXHJcbi5ib3JkZXItZGFzaGVkIHtcclxuICBib3JkZXI6IDJweCBkYXNoZWQgbGlnaHRncmF5IWltcG9ydGFudDtcclxufVxyXG5cclxuLmJ0bi1tYXJnaW4tYm90dG9tIHtcclxuICBtYXJnaW4tYm90dG9tOiA2cHghaW1wb3J0YW50O1xyXG59XHJcblxyXG4uY3VzdG9tLXBhbmVsIHtcclxuICBib3JkZXI6IDJweCBkYXNoZWQgbGlnaHRncmF5IWltcG9ydGFudDtcclxuICBtYXJnaW4tYm90dG9tOiAxNXB4IWltcG9ydGFudDtcclxufVxyXG5cclxuXHJcbi5jdXN0b20tcGFuZWwtdGl0bGUge1xyXG4gIHBvc2l0aW9uOiBhYnNvbHV0ZSFpbXBvcnRhbnQ7XHJcbiAgcmlnaHQ6IDEwcHghaW1wb3J0YW50O1xyXG4gIHRvcDogLTEzcHghaW1wb3J0YW50O1xyXG4gIHdpZHRoOiBhdXRvIWltcG9ydGFudDtcclxuICBiYWNrZ3JvdW5kLWNvbG9yOiB3aGl0ZSFpbXBvcnRhbnQ7XHJcbiAgcGFkZGluZy1sZWZ0OiAxMHB4IWltcG9ydGFudDtcclxuICBwYWRkaW5nLXJpZ2h0OiAxMHB4IWltcG9ydGFudDtcclxufVxyXG5cclxuLmN1c3RvbS1wYW5lbC1ib2R5IHtcclxuICBwYWRkaW5nOiAxMHB4IWltcG9ydGFudDtcclxufVxyXG5cclxuLnNtYWxsLXNoYWRvdyB7XHJcbiAgYm94LXNoYWRvdzogMCAxcHggMXB4IDBweCByZ2JhKDAsMCwwLDAuMykhaW1wb3J0YW50O1xyXG59XHJcblxyXG4uc2VhcmNoLWlucHV0IHtcclxuICBtaW4td2lkdGg6IDcwJSFpbXBvcnRhbnQ7XHJcbn1cclxuXHJcbi5ib3JkZXItZ3JheSB7XHJcbiAgYm9yZGVyOiAxcHggc29saWQgZ3JheSFpbXBvcnRhbnQ7XHJcbn1cclxuXHJcbi5jdXN0b20taW5wdXQge1xyXG4gIG1pbi13aWR0aDogMTIwcHhcclxufVxyXG5cclxuLm1vZGFsIHtcclxuICBvdmVyZmxvdzogYXV0byFpbXBvcnRhbnQ7XHJcbn0gXHJcbi8qXHJcbiAgY3VzdG9tIGJ1dHRvbiBzdHlsZVxyXG4qL1xyXG4gIiwiLnNhZmUtYm94IHtcbiAgcGFkZGluZzogMTBweDsgfVxuXG4uYm9yZGVyLWJvdHRvbS1kYXNoZWQge1xuICBib3JkZXItYm90dG9tOiAycHggZGFzaGVkIGdyYXkgIWltcG9ydGFudDsgfVxuXG4uYm9yZGVyLWRhc2hlZCB7XG4gIGJvcmRlcjogMnB4IGRhc2hlZCBsaWdodGdyYXkgIWltcG9ydGFudDsgfVxuXG4uYnRuLW1hcmdpbi1ib3R0b20ge1xuICBtYXJnaW4tYm90dG9tOiA2cHggIWltcG9ydGFudDsgfVxuXG4uY3VzdG9tLXBhbmVsIHtcbiAgYm9yZGVyOiAycHggZGFzaGVkIGxpZ2h0Z3JheSAhaW1wb3J0YW50O1xuICBtYXJnaW4tYm90dG9tOiAxNXB4ICFpbXBvcnRhbnQ7IH1cblxuLmN1c3RvbS1wYW5lbC10aXRsZSB7XG4gIHBvc2l0aW9uOiBhYnNvbHV0ZSAhaW1wb3J0YW50O1xuICByaWdodDogMTBweCAhaW1wb3J0YW50O1xuICB0b3A6IC0xM3B4ICFpbXBvcnRhbnQ7XG4gIHdpZHRoOiBhdXRvICFpbXBvcnRhbnQ7XG4gIGJhY2tncm91bmQtY29sb3I6IHdoaXRlICFpbXBvcnRhbnQ7XG4gIHBhZGRpbmctbGVmdDogMTBweCAhaW1wb3J0YW50O1xuICBwYWRkaW5nLXJpZ2h0OiAxMHB4ICFpbXBvcnRhbnQ7IH1cblxuLmN1c3RvbS1wYW5lbC1ib2R5IHtcbiAgcGFkZGluZzogMTBweCAhaW1wb3J0YW50OyB9XG5cbi5zbWFsbC1zaGFkb3cge1xuICBib3gtc2hhZG93OiAwIDFweCAxcHggMHB4IHJnYmEoMCwgMCwgMCwgMC4zKSAhaW1wb3J0YW50OyB9XG5cbi5zZWFyY2gtaW5wdXQge1xuICBtaW4td2lkdGg6IDcwJSAhaW1wb3J0YW50OyB9XG5cbi5ib3JkZXItZ3JheSB7XG4gIGJvcmRlcjogMXB4IHNvbGlkIGdyYXkgIWltcG9ydGFudDsgfVxuXG4uY3VzdG9tLWlucHV0IHtcbiAgbWluLXdpZHRoOiAxMjBweDsgfVxuXG4ubW9kYWwge1xuICBvdmVyZmxvdzogYXV0byAhaW1wb3J0YW50OyB9XG5cbi8qXHJcbiAgY3VzdG9tIGJ1dHRvbiBzdHlsZVxyXG4qL1xuIl19 */\"","import { StudentAccountService } from './../../../services/student-account.service';\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { Payment } from '../../../models/payment';\r\nimport { Message } from '../../../../shared/message';\r\n\r\n@Component({\r\n  selector: 'app-safe-index',\r\n  templateUrl: './safe-index.component.html',\r\n  styleUrls: ['./safe-index.component.scss']\r\n})\r\nexport class SafeIndexComponent implements OnInit {\r\n\r\n  public safeObject: any = {};\r\n  public payment: Payment;\r\n  public searchKey: string;\r\n  public studentSearchId;\r\n  public availableServices: any;\r\n\r\n  public studentSearchDialogShow = false;\r\n  public studentSearchDialogLoader = false;\r\n  public showStudentInstallment = false;\r\n  public isWait = false;\r\n  public timeoutId;\r\n  public students: any = []; \r\n\r\n  constructor(private studentAcountService: StudentAccountService) {\r\n    this.initSafeObject();\r\n    // \r\n  }\r\n\r\n  initSafeObject() {\r\n    // set default image\r\n    this.safeObject.image = '/assets/img/avatar.png';\r\n    this.safeObject.notes = 'some notes here';\r\n    this.safeObject.level = {};\r\n    this.safeObject.division = {};\r\n  }\r\n\r\n  searchInputEvent() {\r\n    if (!this.searchKey)\r\n      return;\r\n\r\n    this.students = [];\r\n    this.studentSearchDialogLoader = true;\r\n    this.isWait = true;\r\n    clearTimeout(this.timeoutId);\r\n\r\n    this.timeoutId = setTimeout(() => {\r\n       this.searchAboutStudent();\r\n    }, 500);\r\n  }\r\n\r\n  searchAboutStudent() {\r\n    this.studentAcountService.search(this.searchKey).subscribe((r) => {\r\n        this.studentSearchDialogLoader = false;\r\n        this.students = r;\r\n        if (this.students.length > 0) {\r\n          this.studentSearchDialogShow = true;\r\n        }\r\n    });\r\n  }\r\n\r\n  selectStudent(student) {\r\n    this.studentSearchDialogShow = false;\r\n    this.searchKey = student.name;\r\n    this.studentSearchId = student.id;\r\n    //\r\n    this.loadStudentAccountInfo(student.id);\r\n  }\r\n\r\n  loadStudentAccountInfo(id) {\r\n    if (!id)\r\n      return Message.error('search about student first');\r\n    this.studentAcountService.getStudentAccount(id).subscribe((r) => {\r\n      this.safeObject = r;\r\n    \r\n      if (!this.safeObject.image)\r\n        this.safeObject.image = '/assets/img/avatar.png';\r\n      this.loadAvailableServices();\r\n    });\r\n  }\r\n\r\n  updateStudent() { \r\n    if (this.studentSearchId)\r\n      this.loadStudentAccountInfo(this.studentSearchId);\r\n  }\r\n\r\n  /**\r\n   * perform payment\r\n   */\r\n  performPay() {\r\n    this.payment = new Payment(this.safeObject.id, this.safeObject.paid_value, this.studentAcountService, ()=>{\r\n      this.updateStudent();\r\n    });\r\n    return this.payment.pay();\r\n  } \r\n\r\n  /**\r\n   *  load available services for student\r\n   */\r\n  loadAvailableServices() {\r\n    if(this.safeObject.id) {\r\n      this.studentAcountService.getAvailabeServices(this.safeObject.id).subscribe((r) => {\r\n        this.availableServices = r; \r\n      });\r\n    }\r\n  }\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","module.exports = \"<div class=\\\"modal \\\" id=\\\"studentInstallment\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\"   >\\r\\n  <div class=\\\"modal-dialog modal-sm\\\" role=\\\"document\\\">\\r\\n    <div class=\\\"modal-content w3-animate-top\\\">\\r\\n      <div class=\\\"modal-header\\\">\\r\\n        <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\" aria-label=\\\"Close\\\"><span aria-hidden=\\\"true\\\">&times;</span></button>\\r\\n        <h4 class=\\\"modal-title text-center\\\">{{ \\\"student installments\\\" | trans }}</h4>\\r\\n      </div>\\r\\n      <div class=\\\"modal-body\\\">\\r\\n        <ul class=\\\"w3-ul\\\" >\\r\\n          <li *ngFor=\\\"let item of installments index as i\\\" class=\\\"row\\\" >\\r\\n            <span>{{ i + 1 }}) {{ item.date }}</span>\\r\\n            <input type=\\\"text\\\" style=\\\"border: none;outline: none;background: transparent;border-bottom: 2px dashed gray;width: 50px;padding-left: 10px;padding-right: 10px\\\"  readonly >\\r\\n            <span class=\\\"w3-text-red\\\">{{ item.value | currency }} جنيه</span>\\r\\n          </li>\\r\\n          <br>\\r\\n          <br>\\r\\n          <li class=\\\"row\\\" *ngIf=\\\"total > 0\\\" >\\r\\n            <span>{{ \\\"total\\\" | trans }}</span>\\r\\n            <input type=\\\"text\\\" style=\\\"border: none;outline: none;background: transparent;border-bottom: 2px dashed gray;width: 50px;padding-left: 10px;padding-right: 10px\\\"  readonly >\\r\\n            <span class=\\\"w3-text-red\\\">{{ total | currency }} جنيه</span>\\r\\n          </li>\\r\\n\\r\\n        </ul>\\r\\n      </div>\\r\\n      <div class=\\\"modal-footer\\\">\\r\\n        <button type=\\\"button\\\" class=\\\"btn btn-default\\\" onclick=\\\"document.getElementById('studentInstallment').style.display='none'\\\" >{{ \\\"close\\\" | trans }}</button>\\r\\n      </div>\\r\\n    </div><!-- /.modal-content -->\\r\\n  </div><!-- /.modal-dialog -->\\r\\n</div><!-- /.modal -->\\r\\n\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FjY291bnQvY29tcG9uZW50cy9zYWZlL3N0dWRlbnQtaW5zdGFsbG1lbnQvc3R1ZGVudC1pbnN0YWxsbWVudC5jb21wb25lbnQuc2NzcyJ9 */\"","import { Component, Input, OnInit, SimpleChanges, OnChanges } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-student-installment',\r\n  templateUrl: './student-installment.component.html',\r\n  styleUrls: ['./student-installment.component.scss']\r\n})\r\nexport class StudentInstallmentComponent implements OnInit, OnChanges {\r\n\r\n  public total = 0;\r\n\r\n  @Input() installments: any[];\r\n\r\n  @Input() showStudentInstallment: boolean;\r\n  constructor() { }\r\n\r\n  calculateTotal() {\r\n    this.total = 0;\r\n    this.installments.forEach(element => {\r\n      this.total += element.value;\r\n    });\r\n  }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  ngOnChanges(changes: SimpleChanges): void {\r\n    this.calculateTotal();\r\n  }\r\n\r\n\r\n}\r\n","module.exports = \"<div class=\\\"modal \\\" id=\\\"studentPayments\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\"   >\\r\\n  <div class=\\\"modal-dialog modal-\\\" role=\\\"document\\\">\\r\\n    <div class=\\\"modal-content w3-animate-top\\\">\\r\\n      <div class=\\\"modal-header\\\">\\r\\n        <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\" aria-label=\\\"Close\\\"><span aria-hidden=\\\"true\\\">&times;</span></button>\\r\\n        <h4 class=\\\"modal-title text-center\\\">{{ \\\"payments\\\" | trans }}</h4>\\r\\n      </div>\\r\\n      <div class=\\\"modal-body\\\">\\r\\n        <table class=\\\"table table-bordered\\\" >\\r\\n          <thead>\\r\\n            <tr class=\\\"w3-dark-gray\\\" >\\r\\n              <th>{{ \\\"#\\\" | trans }}</th>\\r\\n              <th>{{ \\\"date\\\" | trans }}</th>\\r\\n              <th>{{ \\\"expenses_type\\\" | trans }}</th>\\r\\n              <th>{{ \\\"value\\\" | trans }}</th>\\r\\n            </tr>\\r\\n          </thead>\\r\\n          <tbody>\\r\\n            <tr *ngFor=\\\"let item of payments index as i\\\" >\\r\\n              <td>{{ i + 1 }}</td>\\r\\n              <td>{{ item.date }}</td>\\r\\n              <td>{{ item.model_type | trans }}</td>\\r\\n              <td>{{ item.value | currency: ' EGP ' }}</td>\\r\\n            </tr>\\r\\n            <tr>\\r\\n              <td>{{ \\\"total\\\" | trans }}</td>\\r\\n              <td></td>\\r\\n              <td></td>\\r\\n              <td>{{ total | currency: ' EGP ' }}</td>\\r\\n            </tr>\\r\\n          </tbody>\\r\\n        </table>\\r\\n      </div>\\r\\n      <div class=\\\"modal-footer\\\">\\r\\n        <button type=\\\"button\\\" class=\\\"btn btn-default\\\" onclick=\\\"document.getElementById('studentPayments').style.display='none'\\\" >{{ \\\"close\\\" | trans }}</button>\\r\\n      </div>\\r\\n    </div><!-- /.modal-content -->\\r\\n  </div><!-- /.modal-dialog -->\\r\\n</div><!-- /.modal -->\\r\\n\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FjY291bnQvY29tcG9uZW50cy9zYWZlL3N0dWRlbnQtcGF5bWVudC9zdHVkZW50LXBheW1lbnQuY29tcG9uZW50LnNjc3MifQ== */\"","import { Component, OnInit, SimpleChanges, OnChanges, Input } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-student-payment',\r\n  templateUrl: './student-payment.component.html',\r\n  styleUrls: ['./student-payment.component.scss']\r\n})\r\nexport class StudentPaymentComponent implements OnInit , OnChanges{\r\n\r\n  public total = 0;\r\n\r\n  @Input() payments: any[];\r\n\r\n  constructor() { }\r\n\r\n  calculateTotal() {\r\n    this.total = 0;\r\n    this.payments.forEach(element => {\r\n      this.total += element.value;\r\n    });\r\n  }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  ngOnChanges(changes: SimpleChanges): void {\r\n    this.calculateTotal();\r\n  }\r\n\r\n}\r\n","module.exports = \"<div class=\\\"modal \\\" id=\\\"studentServices\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\"   >\\r\\n  <div class=\\\"modal-dialog modal-\\\" role=\\\"document\\\">\\r\\n    <div class=\\\"modal-content w3-animate-top\\\">\\r\\n      <div class=\\\"modal-header\\\">\\r\\n        <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\" aria-label=\\\"Close\\\"><span aria-hidden=\\\"true\\\">&times;</span></button>\\r\\n        <h4 class=\\\"modal-title text-center\\\">{{ \\\"student services\\\" | trans }}</h4>\\r\\n      </div>\\r\\n      <div class=\\\"modal-body\\\">\\r\\n        <table class=\\\"table table-bordered\\\" >\\r\\n          <thead>\\r\\n            <tr class=\\\"w3-dark-gray\\\" >\\r\\n              <th>{{ \\\"#\\\" | trans }}</th>\\r\\n              <th>{{ \\\"name\\\" | trans }}</th>\\r\\n              <th>{{ \\\"additional_value\\\" | trans }}</th>\\r\\n              <th>{{ \\\"value\\\" | trans }}</th>\\r\\n            </tr>\\r\\n          </thead>\\r\\n          <tbody>\\r\\n            <tr *ngFor=\\\"let item of services index as i\\\" >\\r\\n              <td>{{ i + 1 }}</td>\\r\\n              <td>{{ item.name }}</td>\\r\\n              <td>{{ item.additional_value | currency: ' جنيه' }}</td>\\r\\n              <td>{{ item.valule | currency: ' جنيه' }}</td>\\r\\n            </tr>\\r\\n            <tr *ngIf=\\\"total > 0\\\" >\\r\\n              <td>{{ \\\"total\\\" | trans }}</td>\\r\\n              <td></td>\\r\\n              <td></td>\\r\\n              <td>{{ total | currency: ' EGP ' }}</td>\\r\\n            </tr>\\r\\n          </tbody>\\r\\n        </table>\\r\\n      </div>\\r\\n      <div class=\\\"modal-footer\\\">\\r\\n        <button type=\\\"button\\\" class=\\\"btn btn-default\\\" onclick=\\\"document.getElementById('studentServices').style.display='none'\\\" >{{ \\\"close\\\" | trans }}</button>\\r\\n      </div>\\r\\n    </div><!-- /.modal-content -->\\r\\n  </div><!-- /.modal-dialog -->\\r\\n</div><!-- /.modal -->\\r\\n\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FjY291bnQvY29tcG9uZW50cy9zYWZlL3N0dWRlbnQtc2VydmljZS9zdHVkZW50LXNlcnZpY2UuY29tcG9uZW50LnNjc3MifQ== */\"","import { Component, OnInit, SimpleChanges, OnChanges, Input } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-student-service',\r\n  templateUrl: './student-service.component.html',\r\n  styleUrls: ['./student-service.component.scss']\r\n})\r\nexport class StudentServiceComponent implements OnInit {\r\n\r\n  public total = 0;\r\n\r\n  @Input() services: any[];\r\n\r\n  constructor() { }\r\n\r\n  calculateTotal() {\r\n    this.total = 0;\r\n    this.services.forEach(element => {\r\n      this.total += element.value;\r\n    });\r\n  }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  ngOnChanges(changes: SimpleChanges): void {\r\n    this.calculateTotal();\r\n  }\r\n\r\n}\r\n","module.exports = \"<div class=\\\"modal\\\" id=\\\"createModal\\\"   role=\\\"dialog\\\">\\r\\n    <div class=\\\"modal-dialog\\\" role=\\\"document\\\">\\r\\n      <div class=\\\"box box-primary modal-content\\\">\\r\\n        <div class=\\\"modal-header\\\">\\r\\n          <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\" onclick=\\\"document.getElementById('createModal').style.display='none'\\\"  aria-label=\\\"Close\\\"><span aria-hidden=\\\"true\\\">&times;</span></button>\\r\\n          <h4 class=\\\"modal-title\\\">{{ \\\"add service\\\" | trans }}</h4>\\r\\n        </div>\\r\\n        <div class=\\\"modal-body\\\"> \\r\\n          <table class=\\\"table\\\" >\\r\\n            <tr>\\r\\n              <th>{{ \\\"name\\\" | trans }} *</th>\\r\\n              <td>\\r\\n                  <input type=\\\"text\\\" class=\\\"form-control input-sm\\\" [(ngModel)]=\\\"item.name\\\" required  >\\r\\n              </td>\\r\\n            </tr>\\r\\n            <tr>\\r\\n              <th>{{ \\\"type\\\" | trans }} *</th>\\r\\n              <td>\\r\\n                <select class=\\\"form-control input-sm\\\" [(ngModel)]=\\\"item.type\\\" required >\\r\\n                  <option>-- {{ \\\"type\\\" | trans }} --</option>\\r\\n                  <option value=\\\"wz\\\" >{{ \\\"wz\\\" | trans }}</option>\\r\\n                  <option value=\\\"in\\\" >{{ \\\"in\\\" | trans }}</option>\\r\\n                </select>\\r\\n              </td>\\r\\n            </tr> \\r\\n            <tr>\\r\\n              <th>{{ \\\"value\\\" | trans }}</th>\\r\\n              <td>\\r\\n                <input type=\\\"number\\\" class=\\\"form-control input-sm\\\" [(ngModel)]=\\\"item.value\\\" required  >\\r\\n              </td>\\r\\n            </tr>\\r\\n            <tr>\\r\\n              <th>{{ \\\"except_level\\\" | trans }}</th>\\r\\n              <td>\\r\\n                <input type=\\\"number\\\" class=\\\"form-control input-sm\\\" [(ngModel)]=\\\"item.except_level_id\\\" required  >\\r\\n              </td>\\r\\n            </tr>\\r\\n            <tr>\\r\\n              <th>{{ \\\"division\\\" | trans }}</th>\\r\\n              <td>\\r\\n                <input type=\\\"number\\\" class=\\\"form-control input-sm\\\" [(ngModel)]=\\\"item.division_id\\\" required  >\\r\\n              </td>\\r\\n            </tr>\\r\\n            <tr>\\r\\n              <th>{{ \\\"copying\\\" | trans }}</th>\\r\\n              <td>\\r\\n                <input type=\\\"checkbox\\\" class=\\\"w3-check\\\" [(ngModel)]=\\\"item.copy\\\"    >\\r\\n              </td>\\r\\n            </tr>\\r\\n            <tr>\\r\\n              <th>{{ \\\"repeat\\\" | trans }}</th>\\r\\n              <td>\\r\\n                <input type=\\\"checkbox\\\" class=\\\"w3-check\\\" [(ngModel)]=\\\"item.repeat\\\"    >\\r\\n              </td>\\r\\n            </tr>\\r\\n            <tr>\\r\\n              <th>{{ \\\"additional_value\\\" | trans }}</th>\\r\\n              <td>\\r\\n                <input type=\\\"number\\\" class=\\\"form-control input-sm\\\" [(ngModel)]=\\\"item.additional_value\\\"    >\\r\\n              </td>\\r\\n            </tr>\\r\\n            <tr>\\r\\n              <th>{{ \\\"installment_percent\\\" | trans }}</th>\\r\\n              <td>\\r\\n                <input type=\\\"number\\\" class=\\\"form-control input-sm\\\" [(ngModel)]=\\\"item.installment_percent\\\"    >\\r\\n              </td>\\r\\n            </tr>\\r\\n            <tr>\\r\\n              <th>{{ \\\"from_installment\\\" | trans }}</th>\\r\\n              <td>\\r\\n                <input type=\\\"number\\\" class=\\\"form-control input-sm\\\" [(ngModel)]=\\\"item.from_installment_id\\\"    >\\r\\n              </td>\\r\\n            </tr> \\r\\n          </table>\\r\\n        </div>\\r\\n        <div class=\\\"modal-footer text-right\\\">\\r\\n          <button type=\\\"button\\\" class=\\\"btn btn-default\\\" onclick=\\\"document.getElementById('createModal').style.display='none'\\\" >{{ \\\"close\\\" | trans }}</button>\\r\\n          <button class=\\\"btn btn-primary\\\" (click)=\\\"addService()\\\" >{{ \\\"add\\\" | trans }}</button>\\r\\n        </div>\\r\\n      </div><!-- /.modal-content -->\\r\\n    </div><!-- /.modal-dialog -->\\r\\n  </div><!-- /.modal --> \\r\\n\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FjY291bnQvY29tcG9uZW50cy9zZXJ2aWNlcy9zZXJ2aWNlLWNyZWF0ZS9zZXJ2aWNlLWNyZWF0ZS5jb21wb25lbnQuc2NzcyJ9 */\"","import { ServiceIndexComponent } from './../service-index/service-index.component';\r\nimport { StudentServiceService } from './../../../services/student-service.service';\r\nimport { IService } from './../../../models/iservice';\r\nimport { Component, OnInit, Input } from '@angular/core';\r\nimport { Message } from '../../../../shared/message';\r\n\r\n@Component({\r\n  selector: 'app-service-create',\r\n  templateUrl: './service-create.component.html',\r\n  styleUrls: ['./service-create.component.scss']\r\n})\r\nexport class ServiceCreateComponent implements OnInit {\r\n\r\n  public item: IService = null;\r\n\r\n  @Input() parent: ServiceIndexComponent;\r\n  @Input() loadServices: any;\r\n  @Input() showCreateModal: any = false;\r\n  \r\n\r\n  constructor(private studentService: StudentServiceService) {\r\n    this.initItem();\r\n  }\r\n\r\n  initItem() {\r\n    this.item = {\r\n      name : '',\r\n      value : 0,\r\n      additional_value : 0,\r\n      installment_percent : 0,\r\n      except_level_id : null,\r\n      division_id : null,\r\n      copy: false,\r\n      repeat: false, \r\n      from_installment_id : null,\r\n      type : null\r\n    };\r\n  }\r\n\r\n  validate() {\r\n    let valid = true;\r\n    if (\r\n      !this.item.name || \r\n      !this.item.type    \r\n    )\r\n      valid = false;\r\n    return valid;\r\n  }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  public addService() {\r\n    if (!this.validate())\r\n      return Message.error('please fill all data');\r\n\r\n    this.studentService.store(this.item).subscribe((res) => {\r\n      const r: any = res;\r\n      if (r.status == 1)\r\n        Message.success(r.message);\r\n      else\r\n        Message.error(r.message);\r\n\r\n      if (r.status == 1) {\r\n        this.initItem();\r\n        this.loadServices();\r\n      }\r\n    });\r\n  }\r\n}\r\n","module.exports = \"<app-breadcrumb [breadcrumbList]=\\\"breadcrumbList\\\"></app-breadcrumb>\\r\\n\\r\\n<div class=\\\"box box-primary material-shadow w3-white table-responsive\\\" >\\r\\n  <div class=\\\"box-header\\\">\\r\\n    <button class=\\\"btn btn-primary\\\" (click)=\\\"viewCreateModal()\\\" style=\\\"margin: 5px\\\"  > \\r\\n      <span class=\\\"fa fa-plus\\\" ></span> {{ \\\"add\\\" | trans }}\\r\\n    </button> \\r\\n    <button *ngIf=\\\"showRemoveButton\\\" (click)=\\\"removeServices()\\\" class=\\\"btn btn-danger\\\" style=\\\"margin: 5px\\\"  > \\r\\n      <span class=\\\"fa fa-trash\\\" ></span>\\r\\n    </button>\\r\\n  </div>\\r\\n  <br>\\r\\n  <table datatable [dtOptions]=\\\"dtOptions\\\" [dtTrigger]=\\\"dtTrigger\\\" class=\\\"table table-bordered text-center\\\">\\r\\n    <thead>\\r\\n      <tr>\\r\\n        <th></th>\\r\\n        <th>#</th>\\r\\n        <th>{{ \\\"name\\\" | trans }}</th>\\r\\n        <th>{{ \\\"value\\\" | trans }}</th>\\r\\n        <!--\\r\\n        <th>{{ \\\"except_level\\\" | trans }}</th>\\r\\n        <th>{{ \\\"division\\\" | trans }}</th>\\r\\n        <th>{{ \\\"copy\\\" | trans }}</th>\\r\\n        <th>{{ \\\"repeat\\\" | trans }}</th>\\r\\n        <th>{{ \\\"additional_value\\\" | trans }}</th>\\r\\n        <th>{{ \\\"installment_percent\\\" | trans }}</th>\\r\\n        <th>{{ \\\"from_installment\\\" | trans }}</th>\\r\\n        -->\\r\\n        <th>{{ \\\"store\\\" | trans }}</th>\\r\\n        <th>{{ \\\"type\\\" | trans }}</th>\\r\\n        <th></th>\\r\\n      </tr>\\r\\n    </thead>\\r\\n\\r\\n    <tbody>\\r\\n      <tr *ngFor=\\\"let item of serviceList index as i\\\" >\\r\\n        <td>\\r\\n          <input type=\\\"checkbox\\\" style=\\\"margin: 0px!important\\\" class=\\\"w3-check\\\" (click)=\\\"toggleFromTrash(item.id)\\\"  >\\r\\n        </td>\\r\\n        <td>{{ i + 1 }}</td>\\r\\n        <td>{{ item.name }}</td>\\r\\n        <td>{{ item.value | currency: ' EGP '  }}</td>\\r\\n        <!--\\r\\n        <td>{{ item.level? item.level.name : '' }}</td>\\r\\n        <td>{{ item.division? item.division.name : '' }}</td>\\r\\n        <td>\\r\\n          <i *ngIf=\\\"item.copy\\\" class=\\\"fa fa-check-square w3-text-green\\\" ></i>\\r\\n          <i *ngIf=\\\"!item.copy\\\" class=\\\"fa fa-close w3-text-red\\\" ></i>\\r\\n        </td>\\r\\n        <td>\\r\\n          <i *ngIf=\\\"item.repeat\\\" class=\\\"fa fa-check-square w3-text-green\\\" ></i>\\r\\n          <i *ngIf=\\\"!item.repeat\\\" class=\\\"fa fa-close w3-text-red\\\" ></i>\\r\\n        </td>\\r\\n        <td>{{ item.additional_value | currency: ' EGP ' }}</td>\\r\\n        <td>{{ item.installment_percent | percent }}</td>\\r\\n        <td>{{ item.from_installment }}</td>\\r\\n        -->\\r\\n        <td>{{ item.store? item.store.name : '' }}</td>\\r\\n        <td>{{ item.type }}</td>\\r\\n        <td> \\r\\n          <button class=\\\"btn btn-warning fa fa-edit\\\" (click)=\\\"showUpdateModal(item)\\\" ></button>\\r\\n        </td>\\r\\n      </tr>\\r\\n    </tbody>\\r\\n  </table>\\r\\n\\r\\n</div>\\r\\n\\r\\n\\r\\n<app-service-create [loadServices]=\\\"loadServices\\\" [showCreateModal]=\\\"showCreateModal\\\" ></app-service-create>\\r\\n\\r\\n<!-- remove modal -->\\r\\n<div class=\\\"w3-modal w3-block\\\" *ngIf=\\\"showRemoveModal\\\"  role=\\\"dialog\\\">\\r\\n    <div class=\\\"modal-dialog\\\" role=\\\"document\\\">\\r\\n      <div class=\\\"modal-content\\\">\\r\\n        <div class=\\\"modal-header\\\">\\r\\n          <h4 class=\\\"modal-title\\\">{{ \\\"remove services\\\" | trans }}</h4>\\r\\n        </div>\\r\\n        <div class=\\\"modal-body text-center\\\">\\r\\n            <i class=\\\"fa fa-spinner fa-spin w3-jumbo w3-text-indigo w3-center\\\" ></i>\\r\\n            <br>\\r\\n            {{ trashList.size() }} - {{ \\\"removed\\\" | trans }} {{ trashList.size() + removed.length }}\\r\\n        </div>\\r\\n        <div class=\\\"modal-footer\\\"> \\r\\n        </div>\\r\\n      </div><!-- /.modal-content -->\\r\\n    </div><!-- /.modal-dialog -->\\r\\n  </div><!-- /.modal -->\\r\\n\\r\\n\\r\\n  <div class=\\\"modal\\\" id=\\\"updateModal\\\"   role=\\\"dialog\\\">\\r\\n    <div class=\\\"modal-dialog\\\" role=\\\"document\\\">\\r\\n      <div class=\\\"box box-primary modal-content\\\">\\r\\n        <div class=\\\"modal-header\\\">\\r\\n          <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\" onclick=\\\"document.getElementById('updateModal').style.display='none'\\\"  aria-label=\\\"Close\\\"><span aria-hidden=\\\"true\\\">&times;</span></button>\\r\\n          <h4 class=\\\"modal-title\\\">{{ \\\"update service\\\" | trans }}</h4>\\r\\n        </div>\\r\\n        <div class=\\\"modal-body\\\"> \\r\\n          <table class=\\\"table\\\" >\\r\\n            <tr>\\r\\n              <th>{{ \\\"name\\\" | trans }} *</th>\\r\\n              <td>\\r\\n                  <input type=\\\"text\\\" class=\\\"form-control input-sm\\\" [(ngModel)]=\\\"updateItem.name\\\" required  >\\r\\n              </td>\\r\\n            </tr>\\r\\n            <tr>\\r\\n              <th>{{ \\\"type\\\" | trans }} *</th>\\r\\n              <td>\\r\\n                <select class=\\\"form-control input-sm\\\" [(ngModel)]=\\\"updateItem.type\\\" required >\\r\\n                  <option>-- {{ \\\"type\\\" | trans }} --</option>\\r\\n                  <option value=\\\"wz\\\" >{{ \\\"wz\\\" | trans }}</option>\\r\\n                  <option value=\\\"in\\\" >{{ \\\"in\\\" | trans }}</option>\\r\\n                </select>\\r\\n              </td>\\r\\n            </tr> \\r\\n            <tr>\\r\\n              <th>{{ \\\"value\\\" | trans }}</th>\\r\\n              <td>\\r\\n                <input type=\\\"number\\\" class=\\\"form-control input-sm\\\" [(ngModel)]=\\\"updateItem.value\\\" required  >\\r\\n              </td>\\r\\n            </tr>\\r\\n            <tr>\\r\\n              <th>{{ \\\"except_level\\\" | trans }}</th>\\r\\n              <td>\\r\\n                <input type=\\\"number\\\" class=\\\"form-control input-sm\\\" [(ngModel)]=\\\"updateItem.except_level_id\\\" required  >\\r\\n              </td>\\r\\n            </tr>\\r\\n            <tr>\\r\\n              <th>{{ \\\"division\\\" | trans }}</th>\\r\\n              <td>\\r\\n                <input type=\\\"number\\\" class=\\\"form-control input-sm\\\" [(ngModel)]=\\\"updateItem.division_id\\\" required  >\\r\\n              </td>\\r\\n            </tr>\\r\\n            <tr>\\r\\n              <th>{{ \\\"copying\\\" | trans }}</th>\\r\\n              <td>\\r\\n                <input type=\\\"checkbox\\\" class=\\\"w3-check\\\" [(ngModel)]=\\\"updateItem.copy\\\"    >\\r\\n              </td>\\r\\n            </tr>\\r\\n            <tr>\\r\\n              <th>{{ \\\"repeat\\\" | trans }}</th>\\r\\n              <td>\\r\\n                <input type=\\\"checkbox\\\" class=\\\"w3-check\\\" [(ngModel)]=\\\"updateItem.repeat\\\"    >\\r\\n              </td>\\r\\n            </tr>\\r\\n            <tr>\\r\\n              <th>{{ \\\"additional_value\\\" | trans }}</th>\\r\\n              <td>\\r\\n                <input type=\\\"number\\\" class=\\\"form-control input-sm\\\" [(ngModel)]=\\\"updateItem.additional_value\\\"    >\\r\\n              </td>\\r\\n            </tr>\\r\\n            <tr>\\r\\n              <th>{{ \\\"installment_percent\\\" | trans }}</th>\\r\\n              <td>\\r\\n                <input type=\\\"number\\\" class=\\\"form-control input-sm\\\" [(ngModel)]=\\\"updateItem.installment_percent\\\"    >\\r\\n              </td>\\r\\n            </tr>\\r\\n            <tr>\\r\\n              <th>{{ \\\"from_installment\\\" | trans }}</th>\\r\\n              <td>\\r\\n                <input type=\\\"number\\\" class=\\\"form-control input-sm\\\" [(ngModel)]=\\\"updateItem.from_installment_id\\\"    >\\r\\n              </td>\\r\\n            </tr> \\r\\n          </table>\\r\\n        </div>\\r\\n        <div class=\\\"modal-footer text-right\\\">\\r\\n          <button type=\\\"button\\\" class=\\\"btn btn-default\\\" onclick=\\\"document.getElementById('updateModal').style.display='none'\\\" >{{ \\\"close\\\" | trans }}</button>\\r\\n          <button class=\\\"btn btn-primary\\\" (click)=\\\"updateService()\\\" >{{ \\\"save\\\" | trans }}</button>\\r\\n        </div>\\r\\n      </div><!-- /.modal-content -->\\r\\n    </div><!-- /.modal-dialog -->\\r\\n  </div><!-- /.modal --> \\r\\n\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FjY291bnQvY29tcG9uZW50cy9zZXJ2aWNlcy9zZXJ2aWNlLWluZGV4L3NlcnZpY2UtaW5kZXguY29tcG9uZW50LnNjc3MifQ== */\"","import { StudentServiceService } from './../../../services/student-service.service';\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { Cache } from 'src/app/shared/cache';\r\nimport { Subject } from 'rxjs';\r\nimport { HashTable } from 'angular-hashtable'; \r\nimport { IService } from '../../../models/iservice';\r\n\r\n@Component({\r\n  selector: 'app-service-index',\r\n  templateUrl: './service-index.component.html',\r\n  styleUrls: ['./service-index.component.scss']\r\n})\r\nexport class ServiceIndexComponent implements OnInit {\r\n\r\n  // datatable options\r\n  public dtOptions: any;\r\n\r\n  // datable trigger\r\n  dtTrigger: Subject<any> = new Subject();\r\n\r\n  // services list\r\n  public serviceList: any[] = null;\r\n\r\n  // init breadcrum\r\n  public breadcrumbList = [];\r\n\r\n  public self: any;\r\n\r\n  // show create modal\r\n  public showCreateModal = false;\r\n\r\n  // remove options\r\n  public showRemoveButton = false;\r\n  public showRemoveModal = false;\r\n  public trashList = new HashTable<any, any>();\r\n  public removed = [];\r\n\r\n  //\r\n  public updateItem: IService = {\r\n    name : '',\r\n    value : 0,\r\n    additional_value : 0,\r\n    installment_percent : 0,\r\n    except_level_id : null,\r\n    division_id : null,\r\n    copy: false,\r\n    repeat: false, \r\n    from_installment_id : null,\r\n    type : null\r\n  };\r\n\r\n  constructor(private studentService: StudentServiceService) {\r\n    this.self = this;\r\n \r\n    // init breadcrum\r\n    this.breadcrumbList = [\r\n      {name: 'home', url: '/'},\r\n      {name: 'services'}\r\n    ];\r\n  }\r\n\r\n  initDatatableOptions() { \r\n    this.dtOptions = {\r\n      pagingType: 'full_numbers',\r\n      pageLength: 10 \r\n    };\r\n  }\r\n\r\n  toggleFromTrash(id) {\r\n    if (this.trashList.has(id)) {\r\n      this.trashList.remove(id);\r\n    }\r\n    else {\r\n      this.trashList.put(id, id);\r\n    }\r\n \r\n    if (this.trashList.size() > 0) \r\n      this.showRemoveButton = true;\r\n    else\r\n      this.showRemoveButton = false;\r\n  }\r\n\r\n  removeServices() {\r\n    this.showRemoveModal = true;\r\n    const queue = this.trashList.getKeys();\r\n    if (queue.length > 0) {\r\n      const id = queue.pop();\r\n      this.studentService.destroy(id).subscribe(()=> {\r\n        this.removed.push(id);\r\n        this.trashList.remove(id);\r\n        //\r\n        this.removeServices();\r\n      });\r\n    } else {\r\n      this.removed = [];\r\n      this.showRemoveButton = false;\r\n      this.showRemoveModal = false;\r\n      //\r\n      this.dtTrigger.unsubscribe();   \r\n      this.loadServices();\r\n    }\r\n  }\r\n\r\n  loadServices() {\r\n    //alert(Cache.has(StudentServiceService.STUDENT_SERVICE_PREFIX));\r\n    //if (Cache.has(StudentServiceService.STUDENT_SERVICE_PREFIX)) {\r\n    //  this.serviceList = Cache.get(StudentServiceService.STUDENT_SERVICE_PREFIX);\r\n    //} else { \r\n    this.studentService.get().subscribe( (res: any) => {\r\n      this.serviceList = res;\r\n      // cache the result\r\n      Cache.set(StudentServiceService.STUDENT_SERVICE_PREFIX, this.serviceList);\r\n      this.dtTrigger.next();\r\n    });\r\n    //}\r\n  }\r\n\r\n  viewCreateModal() {\r\n    document.getElementById('createModal').style.display='block';\r\n  }\r\n\r\n  showUpdateModal(item) {\r\n    this.updateItem = item;\r\n    document.getElementById('updateModal').style.display='block';\r\n  }\r\n\r\n  updateService() {\r\n    let data: any = this.updateItem;\r\n    this.studentService.update(data).subscribe(() => {\r\n\r\n    });\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.loadServices();\r\n    this.initDatatableOptions();\r\n  }\r\n\r\n}\r\n","module.exports = \"<table class=\\\"table table-bordered\\\">\\r\\n  <thead>\\r\\n    <tr>\\r\\n      <th>#</th>\\r\\n      <th>{{ \\\"name\\\" | trans }}</th>\\r\\n      <th>{{ \\\"value\\\" | trans }}</th>\\r\\n      <th>{{ \\\"except_level\\\" | trans }}</th>\\r\\n      <th>{{ \\\"division\\\" | trans }}</th>\\r\\n      <th>{{ \\\"copy\\\" | trans }}</th>\\r\\n      <th>{{ \\\"repeat\\\" | trans }}</th>\\r\\n      <th>{{ \\\"additional_value\\\" | trans }}</th>\\r\\n      <th>{{ \\\"installment_percent\\\" | trans }}</th>\\r\\n      <th>{{ \\\"from_installment\\\" | trans }}</th>\\r\\n      <th>{{ \\\"store\\\" | trans }}</th>\\r\\n      <th>{{ \\\"type\\\" | trans }}</th>\\r\\n    </tr>\\r\\n  </thead>\\r\\n\\r\\n  <tbody>\\r\\n    <tr *ngFor=\\\"let item of serviceList index as i\\\" >\\r\\n      <td>{{ i + 1 }}</td>\\r\\n      <td>{{ item.name }}</td>\\r\\n      <td>{{ item.value | currency: ' EGP'  }}</td>\\r\\n      <td>{{ item.level? item.level.name : '' }}</td>\\r\\n      <td>{{ item.division? item.division.name : '' }}</td>\\r\\n      <td>\\r\\n        <i *ngIf=\\\"item.copy\\\" class=\\\"fa fa-check-square w3-text-green\\\" ></i>\\r\\n        <i *ngIf=\\\"!item.copy\\\" class=\\\"fa fa-close w3-text-red\\\" ></i>\\r\\n      </td>\\r\\n      <td>\\r\\n        <i *ngIf=\\\"item.repeat\\\" class=\\\"fa fa-check-square w3-text-green\\\" ></i>\\r\\n        <i *ngIf=\\\"!item.repeat\\\" class=\\\"fa fa-close w3-text-red\\\" ></i>\\r\\n      </td>\\r\\n      <td>{{ item.additional_value | currency: ' EGP' }}</td>\\r\\n      <td>{{ item.installment_percent | percent }}</td>\\r\\n      <td>{{ item.from_installment }}</td>\\r\\n      <td>{{ item.store? item.store.name : '' }}</td>\\r\\n      <td>{{ item.type }}</td>\\r\\n    </tr>\\r\\n  </tbody>\\r\\n</table>\\r\\n\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FjY291bnQvY29tcG9uZW50cy9zZXJ2aWNlcy9zZXJ2aWNlLXRhYmxlL3NlcnZpY2UtdGFibGUuY29tcG9uZW50LnNjc3MifQ== */\"","import { IService } from './../../../models/iservice';\r\nimport { StudentServiceService } from './../../../services/student-service.service';\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { Cache } from 'src/app/shared/cache';\r\n\r\n@Component({\r\n  selector: 'app-service-table',\r\n  templateUrl: './service-table.component.html',\r\n  styleUrls: ['./service-table.component.scss']\r\n})\r\nexport class ServiceTableComponent implements OnInit {\r\n\r\n  // services list\r\n  public serviceList: [] = null;\r\n\r\n  constructor(private studentService: StudentServiceService) {\r\n\r\n  }\r\n\r\n  loadServices() {\r\n    this.studentService.get().subscribe( (res: any) => {\r\n      this.serviceList = res;\r\n      // cache the result\r\n      Cache.set(StudentServiceService.STUDENT_SERVICE_PREFIX, this.serviceList);\r\n    });\r\n  }\r\n\r\n  ngOnInit() {\r\n    if (Cache.has(StudentServiceService.STUDENT_SERVICE_PREFIX)) {\r\n      this.serviceList = Cache.get(StudentServiceService.STUDENT_SERVICE_PREFIX);\r\n    } else {\r\n      this.loadServices();\r\n    }\r\n  }\r\n\r\n}\r\n","import { Message } from '../../shared/message';\nimport { StudentAccountService } from '../services/student-account.service';\nimport { Auth } from '../../shared/auth';\n\n\nexport class Payment {\n\n    public studentId: number;\n    public value: number;\n    public studentAcountService: StudentAccountService;\n    public action: any;\n\n    constructor(studentId: number, value: number, studentAcountService: StudentAccountService, action: any) {\n        this.studentId = studentId;\n        this.value = value;\n        this.studentAcountService = studentAcountService;\n        this.action = action;\n    }\n\n    /**\n     * validate on the data\n     */\n    validate() {\n        let valid = true;\n        if (this.studentId <= 0 || this.value <= 0) {\n            valid = false;\n        }\n        return valid;\n    }\n\n    /**\n     * permform payment of the student\n     */\n    pay() {\n        if (!this.validate()) \n            return Message.error('select a student or not value to pay');\n        \n        const data = {\n            api_token: Auth.getApiToken(),\n            student_id: this.studentId,\n            value: this.value\n        };\n        this.studentAcountService.studentPay(data).subscribe((r)=> {\n            const response: any = r;\n            if (response.status == 1) {\n                Message.success(response.message);\n                this.action();\n            } \n            else \n                Message.error(response.message); \n\n        });\n    }\n\n\n}\n","import { Auth } from './../../shared/auth';\nimport { Injectable } from '@angular/core'; \nimport { HttpClient } from '@angular/common/http';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AcademicYearService {\n\n  public static STUDENT_SERVICE_PREFIX = 'student_services';\n\n  constructor(private http: HttpClient) {\n  }\n\n  /**\n   * get academic_year_expenses from api\n   *\n   */\n  public get(data) {\n    return this.http.get('account/academic_year_expenses?api_token=' + Auth.getApiToken()+\"&level_id=\"+data.level_id);\n  }\n\n  /**\n   * store new service\n   */\n  public store(data) {\n    // remove old cache\n    return this.http.post('account/academic_year_expenses/store' + '?api_token=' + Auth.getApiToken(), data);\n  }\n\n  /**\n   * update service\n   */\n  public update(data: any) {\n    // remove old cache\n    data['api_token'] = Auth.getApiToken();\n    return this.http.post('account/academic_year_expenses/update', data);\n  }\n\n  /**\n   * remove service\n   */\n  public destroy(id) {\n    // remove old cache\n    return this.http.post('account/academic_year_expenses/delete/' + id + '?api_token=' + Auth.getApiToken(), null);\n  }\n}\n","import { Auth } from './../../shared/auth';\r\nimport { Injectable } from '@angular/core';\r\nimport { environment } from './../../../environments/environment';\r\nimport { HttpClient } from '@angular/common/http';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class StudentAccountService {\r\n\r\n  constructor(private http: HttpClient) {\r\n  }\r\n\r\n  /**\r\n   * get services from api\r\n   *\r\n   */\r\n  public search(key: string) {\r\n    return this.http.get('account/search_student?api_token=' + Auth.getApiToken()+\"&key=\"+key);\r\n  }\r\n\r\n  /**\r\n   * get services from api\r\n   *\r\n   */\r\n  public getStudentAccount(studentId) {\r\n    return this.http.get('account/get_student_account?api_token=' + Auth.getApiToken()+\"&student_id=\"+studentId);\r\n  }\r\n\r\n  /**\r\n   * update student installments\r\n   *\r\n   */\r\n  public updateStudentInstallments(data: any) {\r\n    return this.http.post('account/installment/update', data);\r\n  }\r\n  \r\n  /**\r\n   * update student installments\r\n   *\r\n   */\r\n  public studentPay(data: any) {\r\n    return this.http.post('account/pay', data);\r\n  }\r\n\r\n  /**\r\n   * get available services for student\r\n   *\r\n   */\r\n  public getAvailabeServices(studentId: number) { \r\n    return this.http.get('account/get_available_services?api_token='+Auth.getApiToken()+'&student_id='+studentId);\r\n  }\r\n}\r\n","import { Auth } from './../../shared/auth';\r\nimport { environment } from './../../../environments/environment';\r\nimport { IService } from './../models/iservice';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Cache } from 'src/app/shared/cache';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class StudentServiceService {\r\n\r\n  public static STUDENT_SERVICE_PREFIX = 'student_services';\r\n\r\n  constructor(private http: HttpClient) {\r\n  }\r\n\r\n  /**\r\n   * get services from api\r\n   *\r\n   */\r\n  public get() {\r\n    return this.http.get('account/services?api_token=' + Auth.getApiToken());\r\n  }\r\n\r\n  /**\r\n   * store new service\r\n   */\r\n  public store(data: IService) {\r\n    // remove old cache\r\n    Cache.remove(StudentServiceService.STUDENT_SERVICE_PREFIX);\r\n    return this.http.post('account/services/store' + '?api_token=' + Auth.getApiToken(), data);\r\n  }\r\n\r\n  /**\r\n   * update service\r\n   */\r\n  public update(data: any) {\r\n    // remove old cache\r\n    Cache.remove(StudentServiceService.STUDENT_SERVICE_PREFIX);\r\n    return this.http.post('account/services/update/' + data.id + '?api_token=' + Auth.getApiToken(), data);\r\n  }\r\n\r\n  /**\r\n   * remove service\r\n   */\r\n  public destroy(id) {\r\n    // remove old cache\r\n    Cache.remove(StudentServiceService.STUDENT_SERVICE_PREFIX);\r\n    return this.http.post('account/services/delete/' + id + '?api_token=' + Auth.getApiToken(), null);\r\n  }\r\n\r\n}\r\n","export class Message {\r\n\r\n    public static success(message: string) {\r\n      alert(message);\r\n    }\r\n\r\n    public static error(message: string) {\r\n      alert(message);\r\n    }\r\n\r\n    public static confirm(message: string, action: any) {\r\n      const res = confirm(message);\r\n      if (res == true)\r\n        action(); \r\n    }\r\n}\r\n"],"sourceRoot":""}