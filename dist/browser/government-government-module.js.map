{"version":3,"sources":["webpack:///./src/app/settings/government/create/create.component.html","webpack:///./src/app/settings/government/create/create.component.scss","webpack:///./src/app/settings/government/create/create.component.ts","webpack:///./src/app/settings/government/edit/edit.component.html","webpack:///./src/app/settings/government/edit/edit.component.scss","webpack:///./src/app/settings/government/edit/edit.component.ts","webpack:///./src/app/settings/government/government-routing.module.ts","webpack:///./src/app/settings/government/government.module.ts","webpack:///./src/app/settings/government/list/list.component.html","webpack:///./src/app/settings/government/list/list.component.scss","webpack:///./src/app/settings/government/list/list.component.ts","webpack:///./src/app/settings/government/services/government.service.ts"],"names":[],"mappings":"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","file":"government-government-module.js","sourcesContent":["module.exports = \"\\r\\n\\r\\n<div class=\\\"box box-default\\\">\\r\\n  <div class=\\\"box-body\\\">\\r\\n    <button type=\\\"button\\\" class=\\\"btn btn-info\\\" data-toggle=\\\"modal\\\" data-target=\\\"#modal-default\\\">\\r\\n      اضافة محافظة جديدة\\r\\n    </button>\\r\\n  </div>\\r\\n</div>\\r\\n\\r\\n<div class=\\\"modal fade\\\" id=\\\"modal-default\\\">\\r\\n  <div class=\\\"modal-dialog\\\">\\r\\n    <div class=\\\"modal-content\\\">\\r\\n      <div class=\\\"modal-header\\\">\\r\\n        <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\" aria-label=\\\"Close\\\">\\r\\n          <span aria-hidden=\\\"true\\\">&times;</span></button>\\r\\n        <h4 class=\\\"modal-title\\\">اضافة محافظة جديدة</h4>\\r\\n      </div>\\r\\n      <div class=\\\"box box-primary\\\">\\r\\n        <div class=\\\"box-header with-border\\\">\\r\\n          <div [hidden]=\\\"!errorMessage\\\" class=\\\"alert alert-danger\\\">{{errorMessage}}</div>\\r\\n        </div>\\r\\n        <!-- /.box-header -->\\r\\n        <!-- form start -->\\r\\n        <form role=\\\"form\\\" [hidden] class=\\\"forms-sample create\\\" [formGroup]=\\\"callForm\\\" (ngSubmit)=\\\"create()\\\" autocomplete=\\\"off\\\">\\r\\n          <div class=\\\"box-body\\\">\\r\\n            <div class=\\\"form-group\\\">\\r\\n              <label for=\\\"exampleInputEmail1\\\">اسم المحافظة<span\\r\\n                style=\\\"color: red\\\">*</span></label>\\r\\n              <input formControlName=\\\"name\\\" type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"exampleInputEmail1\\\" placeholder=\\\"ادخل اسم الدولة\\\">\\r\\n             <div *ngIf=\\\"(name.touched || name.dirty) && name.invalid\\\">\\r\\n                <div class=\\\"alert alert-danger\\\" *ngIf=\\\"name.errors?.required\\\">\\r\\n                    <p>من فضلك ادخل اسم المحافظة</p>\\r\\n                </div>\\r\\n              </div>\\r\\n            </div>\\r\\n            <div class=\\\"form-group\\\">\\r\\n              <label>الدولة\\r\\n                <span style=\\\"color: red\\\">*</span>\\r\\n              </label>\\r\\n              <select class=\\\"form-control\\\" formControlName=\\\"country_id\\\">\\r\\n                <option value=\\\"\\\" selected=\\\"selected\\\"> -- اختر الدولة --</option>\\r\\n\\r\\n                <option value=\\\"{{row.id}}\\\" *ngFor='let row of rows'>{{row.name}}</option>\\r\\n\\r\\n              </select>\\r\\n              <div *ngIf=\\\"(country_id.touched || country_id.dirty) && country_id.invalid\\\">\\r\\n                <div class=\\\"alert alert-danger\\\" *ngIf=\\\"name.errors?.required\\\">\\r\\n                    <p>من فضلك ادخل اختر الدولة</p>\\r\\n                </div>\\r\\n              </div>\\r\\n\\r\\n            </div>\\r\\n          </div>\\r\\n       \\r\\n           \\r\\n          <div class=\\\"box-footer\\\">\\r\\n            <button [disabled]=\\\"callForm.invalid || isSubmitClick\\\" type=\\\"submit\\\" class=\\\"btn btn-primary\\\" >حفظ</button>\\r\\n          </div>\\r\\n        </form>\\r\\n      </div>\\r\\n      \\r\\n    </div>\\r\\n    <!-- /.modal-content -->\\r\\n  </div>\\r\\n  <!-- /.modal-dialog -->\\r\\n</div>\\r\\n\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3NldHRpbmdzL2dvdmVybm1lbnQvY3JlYXRlL2NyZWF0ZS5jb21wb25lbnQuc2NzcyJ9 */\"","import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\r\nimport { GovernmentService } from '../services/government.service';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { NavigationEnd, Router } from '@angular/router';\r\nimport { IReqItem } from '../models/IReqItem';\r\nimport { GeneralService } from 'src/app/shared/services/general.service';\r\n\r\n@Component({\r\n  selector: 'app-create-government',\r\n  templateUrl: './create.component.html',\r\n  styleUrls: ['./create.component.scss']\r\n})\r\nexport class CreateComponent implements OnInit {\r\n  public callForm: FormGroup;\r\n  public errorMessage = '';\r\n  public nameError = '';\r\n  public governmentError = '';\r\n  public countryError = '';\r\n  public rows = [];\r\n  public data: IReqItem = { name: '' , country_id:''};\r\n  public isSubmitClick = false;\r\n  mySubscription: any;\r\n\r\n  constructor(\r\n    private service: GovernmentService,\r\n    private router: Router,\r\n    private toastr: ToastrService,\r\n    private generalService:GeneralService\r\n  ) {\r\n    this.callForm = new FormGroup({\r\n      name: new FormControl(null, [\r\n        Validators.required,\r\n        Validators.minLength(3),\r\n        Validators.maxLength(50),\r\n      ]),\r\n      country_id: new FormControl(null, [\r\n        Validators.required,\r\n      ]),\r\n    });\r\n   }\r\n\r\n  ngOnInit() {\r\n    this.generalService.getAllCountries().subscribe((res:any)=>{\r\n      this.rows = res.data;\r\n    });\r\n  \r\n  }\r\n  create(){\r\n    this.nameError = '';\r\n    if (this.callForm.invalid) {\r\n      this.errorMessage = 'من فضلك ادخل بيانات صحيحة';\r\n      return;\r\n    }\r\n    this.isSubmitClick = true;\r\n    this.data.name = this.callForm.value.name;\r\n    this.data.country_id = this.callForm.value.country_id;\r\n\r\n    this.service.create(this.data).subscribe((res:any)=>{\r\n      console.log(res);\r\n      \r\n      if(res.status == 0){\r\n        this.errorMessage = res.message;\r\n        this.isSubmitClick = false;\r\n        this.toastr.error(res.message, '');\r\n\r\n      }else{\r\n        this.toastr.success(res.message, '');\r\n        this.errorMessage = '';\r\n        this.isSubmitClick = true;\r\n       \r\n      }(e) => {\r\n        this.isSubmitClick = false;\r\n        if (e.status == 400) {\r\n          this.errorMessage = 'من فضلك ادخل بيانات صحيحة';\r\n          for (let i = 0; i < e.error.errors.length; i++) {\r\n            if (e.error.errors[i].input === 'name') {\r\n              this.nameError = e.error.errors[i].message;\r\n            }\r\n          }\r\n        }\r\n      };\r\n    })\r\n  }\r\n\r\n  get name() {\r\n    return this.callForm.get('name');\r\n  }\r\n  get country_id() {\r\n    return this.callForm.get('country_id');\r\n  }\r\n}\r\n","module.exports = \"<div class=\\\"box box-primary\\\">\\r\\n  <div class=\\\"box-header with-border\\\">\\r\\n    <h3 class=\\\"box-title\\\">تعديل المحافظة</h3>\\r\\n  </div>\\r\\n  <form role=\\\"form\\\" [hidden] class=\\\"forms-sample create\\\" [formGroup]=\\\"callForm\\\" (ngSubmit)=\\\"onSubmit()\\\" autocomplete=\\\"off\\\">\\r\\n    <div class=\\\"box-body\\\">\\r\\n      <div class=\\\"form-group\\\">\\r\\n        <label for=\\\"exampleInputEmail1\\\">اسم المحافظة</label>\\r\\n        <input formControlName=\\\"name\\\" type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"exampleInputEmail1\\\" placeholder=\\\"ادخل اسم الدولة\\\">\\r\\n      </div>\\r\\n      <div class=\\\"form-group\\\">\\r\\n        <label>الدولة\\r\\n          <span style=\\\"color: red\\\">*</span>\\r\\n        </label>\\r\\n        <select class=\\\"form-control\\\" formControlName=\\\"country_id\\\">\\r\\n          <option value=\\\"{{row.id}}\\\" *ngFor='let row of countries'>{{row.name}}</option>\\r\\n        </select>\\r\\n      </div>\\r\\n    </div>\\r\\n    <div class=\\\"box-footer\\\">\\r\\n      <button type=\\\"submit\\\" class=\\\"btn btn-primary\\\">حفظ</button>\\r\\n      &nbsp;\\r\\n      <a routerLink='/settings/government' class=\\\"btn btn-info\\\">الغاء</a>\\r\\n    </div>\\r\\n  </form>\\r\\n</div>\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3NldHRpbmdzL2dvdmVybm1lbnQvZWRpdC9lZGl0LmNvbXBvbmVudC5zY3NzIn0= */\"","import { Component, OnInit } from '@angular/core';\r\nimport { GovernmentService } from '../services/government.service';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { IReqItem } from '../models/IReqItem';\r\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\r\nimport { GeneralService } from 'src/app/shared/services/general.service';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { NavigationEnd, Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-edit',\r\n  templateUrl: './edit.component.html',\r\n  styleUrls: ['./edit.component.scss']\r\n})\r\nexport class EditComponent implements OnInit {\r\n  public data: IReqItem = { name: '' , country_id:''};\r\n  public callForm: FormGroup;\r\n  public errorMessage = '';\r\n  public nameError = '';\r\n  public governmentError = '';\r\n  public countryError = '';\r\n  public isSubmitClick = false;\r\n  public countries = [];\r\n  public sucreq = false;\r\n  public row;\r\n  public id;\r\n  constructor(\r\n    private generalService:GeneralService, \r\n    private service: GovernmentService,\r\n    private toastr: ToastrService,\r\n    private route: ActivatedRoute, \r\n    private router:Router\r\n\r\n\r\n    ) { \r\n      this.callForm = new FormGroup({\r\n        name: new FormControl(null, [\r\n          Validators.required,\r\n          Validators.minLength(3),\r\n          Validators.maxLength(50),\r\n        ]),\r\n        country_id: new FormControl(null, [\r\n          Validators.required,\r\n        ]),\r\n      });\r\n    }\r\n\r\n  ngOnInit() {\r\n    this.id = this.route.snapshot.params.id;\r\n    this.generalService.getAllCountries().subscribe((res:any)=>{\r\n      this.countries = res.data;\r\n    });\r\n    this.service.getItemById(this.id).subscribe((res:any)=>{\r\n      if(res.status == 1){\r\n        this.name.setValue(res.data.name);\r\n        this.country_id.setValue(res.data.country_id);\r\n\r\n      }\r\n      \r\n    });\r\n  }\r\n  onSubmit(){\r\n    const itemData: IReqItem = {\r\n      name: this.name.value,\r\n      country_id: this.country_id.value,\r\n    };\r\n    this.service.update(this.id, itemData).subscribe((res)=>{\r\n      if(res.status == 1){\r\n        this.router.navigate(['/settings/government/']).then(() => {\r\n          this.toastr.success(res.message, '');\r\n        });\r\n      }else{\r\n        this.toastr.error(res.message, '');\r\n      }\r\n    });\r\n  }\r\n  get name() {\r\n    return this.callForm.get('name');\r\n  }\r\n  get country_id() {\r\n    return this.callForm.get('country_id');\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { ListComponent } from './list/list.component';\r\nimport { EditComponent } from './edit/edit.component';\r\nimport { CreateComponent } from './create/create.component';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: ListComponent\r\n  },\r\n  {\r\n    path: 'craete',\r\n    component: CreateComponent\r\n  },\r\n  {\r\n    path: 'edit/:id',\r\n     component: EditComponent\r\n  },\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class GovernmentRoutingModule { }\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { SharedModule } from '../../shared/shared.module';\r\nimport { GovernmentRoutingModule } from './government-routing.module';\r\nimport { ListComponent } from './list/list.component';\r\nimport { CreateComponent } from './create/create.component';\r\nimport { EditComponent } from './edit/edit.component';\r\nimport { DataTablesModule } from 'angular-datatables';\r\n\r\n@NgModule({\r\n  declarations: [ListComponent, CreateComponent, EditComponent],\r\n  imports: [\r\n    CommonModule,\r\n    SharedModule,\r\n    DataTablesModule,\r\n    GovernmentRoutingModule\r\n  ]\r\n})\r\nexport class GovernmentModule { }\r\n","module.exports = \"<div class=\\\"box box-default\\\">\\r\\n  <div class=\\\"box-body\\\">\\r\\n    <button type=\\\"button\\\" class=\\\"btn btn-info\\\" data-toggle=\\\"modal\\\" data-target=\\\"#modal-default\\\">\\r\\n      اضافة محافظة جديدة\\r\\n    </button>\\r\\n  </div>\\r\\n</div>\\r\\n\\r\\n<div [hidden]=\\\"sucreq\\\">\\r\\n  <div class=\\\" modal fade\\\" id=\\\"modal-default\\\">\\r\\n    <div class=\\\"modal-dialog\\\">\\r\\n      <div class=\\\"modal-content\\\">\\r\\n        <div class=\\\"modal-header\\\">\\r\\n          <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\" aria-label=\\\"Close\\\"> <span\\r\\n              aria-hidden=\\\"true\\\">&times;</span></button>\\r\\n          <h4 class=\\\"modal-title\\\">اضافة محافظة جديدة</h4>\\r\\n\\r\\n        </div>\\r\\n        <div class=\\\"box box-primary\\\">\\r\\n          <div class=\\\"box-header with-border\\\">\\r\\n            <div [hidden]=\\\"!errorMessage\\\" class=\\\"alert alert-danger\\\">{{errorMessage}}</div>\\r\\n          </div>\\r\\n          <!-- /.box-header -->\\r\\n          <!-- form start -->\\r\\n          <form role=\\\"form\\\" class=\\\" forms-sample create\\\" [formGroup]=\\\"callForm\\\" (ngSubmit)=\\\"create()\\\"\\r\\n            autocomplete=\\\"off\\\">\\r\\n            <div class=\\\"box-body\\\">\\r\\n              <div class=\\\"form-group\\\">\\r\\n                <label for=\\\"exampleInputEmail1\\\">اسم المحافظة<span style=\\\"color: red\\\">*</span></label>\\r\\n                <input formControlName=\\\"name\\\" type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"exampleInputEmail1\\\"\\r\\n                  placeholder=\\\"ادخل اسم الدولة\\\">\\r\\n                <div *ngIf=\\\"(name.touched || name.dirty) && name.invalid\\\">\\r\\n                  <div class=\\\"alert alert-danger\\\" *ngIf=\\\"name.errors?.required\\\">\\r\\n                    <p>من فضلك ادخل اسم المحافظة</p>\\r\\n                  </div>\\r\\n                </div>\\r\\n              </div>\\r\\n              <div class=\\\"form-group\\\">\\r\\n                <label>الدولة\\r\\n                  <span style=\\\"color: red\\\">*</span>\\r\\n                </label>\\r\\n                <select class=\\\"form-control\\\" formControlName=\\\"country_id\\\">\\r\\n                  <option value=\\\"{{row.id}}\\\" *ngFor='let row of countries'>{{row.name}}</option>\\r\\n                </select>\\r\\n                <div *ngIf=\\\"(country_id.touched || country_id.dirty) && country_id.invalid\\\">\\r\\n                  <div class=\\\"alert alert-danger\\\" *ngIf=\\\"name.errors?.required\\\">\\r\\n                    <p>من فضلك ادخل اختر الدولة</p>\\r\\n                  </div>\\r\\n                </div>\\r\\n              </div>\\r\\n            </div>\\r\\n\\r\\n            <div class=\\\"box-footer\\\">\\r\\n              <button [disabled]=\\\"callForm.invalid || isSubmitClick\\\" type=\\\"submit\\\" class=\\\"btn btn-primary\\\">حفظ</button>\\r\\n            </div>\\r\\n          </form>\\r\\n        </div>\\r\\n\\r\\n      </div>\\r\\n      <!-- /.modal-content -->\\r\\n    </div>\\r\\n    <!-- /.modal-dialog -->\\r\\n  </div>\\r\\n</div>\\r\\n\\r\\n<div class=\\\"box\\\">\\r\\n  <div class=\\\"box-header\\\">\\r\\n    <!-- <h3 class=\\\"box-title\\\">Data Table With Full Features</h3> -->\\r\\n  </div>\\r\\n  <!-- /.box-header -->\\r\\n  <div class=\\\"box-body\\\">\\r\\n    <table datatable [dtOptions]=\\\"dtOptions\\\" [dtTrigger]=\\\"dtTrigger\\\" class=\\\"table table-bordered table-striped\\\">\\r\\n      <thead>\\r\\n        <tr>\\r\\n          <th>ID</th>\\r\\n          <th>الاسم</th>\\r\\n          <th>الدولة</th>\\r\\n          <th>ملاحظات</th>\\r\\n          <th>الاجراءات</th>\\r\\n\\r\\n        </tr>\\r\\n      </thead>\\r\\n      <tbody>\\r\\n        <tr *ngFor=\\\"let row of rows index as i\\\">\\r\\n          <td>{{ i + 1 }}</td>\\r\\n          <td>{{ row.name }}</td>\\r\\n          <td>{{ row.country.name }}</td>\\r\\n          <td>{{ row.notes }}</td>\\r\\n          <td>\\r\\n            <button class=\\\"btn btn-info\\\" type=\\\"button\\\" routerLink='/settings/government/edit/{{row.id}}'>\\r\\n              <i class=\\\"fa fa-edit\\\"></i>\\r\\n            </button>\\r\\n            &nbsp;\\r\\n            <button class=\\\"btn btn-danger\\\" type=\\\"button\\\" (click)=\\\"delete(row.id)\\\">\\r\\n              <i class=\\\"fa fa-trash-o\\\"></i>\\r\\n            </button>\\r\\n          </td>\\r\\n        </tr>\\r\\n      </tbody>\\r\\n      <tfoot>\\r\\n        <tr>\\r\\n          <th>ID</th>\\r\\n          <th>الاسم</th>\\r\\n          <th>الدولة</th>\\r\\n          <th>ملاحظات</th>\\r\\n          <th>الاجراءات</th>\\r\\n\\r\\n        </tr>\\r\\n      </tfoot>\\r\\n    </table>\\r\\n  </div>\\r\\n  <!-- /.box-body -->\\r\\n</div>\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3NldHRpbmdzL2dvdmVybm1lbnQvbGlzdC9saXN0LmNvbXBvbmVudC5zY3NzIn0= */\"","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { GeneralService } from 'src/app/shared/services/general.service';\r\nimport { Subject } from 'rxjs';\r\nimport { GovernmentService } from '../services/government.service';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { IReqItem } from '../models/IReqItem';\r\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\r\nimport { DataTableDirective } from 'angular-datatables';\r\n\r\n@Component({\r\n  selector: 'app-list',\r\n  templateUrl: './list.component.html',\r\n  styleUrls: ['./list.component.scss']\r\n})\r\nexport class ListComponent implements OnInit {\r\n  dtElement: DataTableDirective;\r\n  isDtInitialized:boolean = false;\r\n  public data: IReqItem = { name: '' , country_id:''};\r\n  public callForm: FormGroup;\r\n  public errorMessage = '';\r\n  public nameError = '';\r\n  public governmentError = '';\r\n  public countryError = '';\r\n  public isSubmitClick = false;\r\n\r\n  dtOptions: any = {};\r\n  dtTrigger: Subject<any> = new Subject();\r\n  public rows = [];\r\n  public countries = [];\r\n  public sucreq = false;\r\n\r\n  public query = {\r\n    page: '1',\r\n    size: '10',\r\n  };\r\n  constructor(\r\n    private generalService:GeneralService, \r\n    private service: GovernmentService,\r\n    private toastr: ToastrService\r\n  ) {\r\n    this.callForm = new FormGroup({\r\n      name: new FormControl(null, [\r\n        Validators.required,\r\n        Validators.minLength(3),\r\n        Validators.maxLength(50),\r\n      ]),\r\n      country_id: new FormControl(null, [\r\n        Validators.required,\r\n      ]),\r\n    });\r\n   }\r\n\r\n  ngOnInit() {\r\n    this.dtOptions = {\r\n      pagingType: 'full_numbers',\r\n      pageLength: 10 \r\n    };\r\n    this.generalService.getAllCountries().subscribe((res:any)=>{\r\n      this.countries = res.data;\r\n    });\r\n    this.callHttp();\r\n  }\r\n  \r\n  callHttp(): void {\r\n    this.service.getAll(this.query).subscribe(\r\n      (res: any) => {\r\n        console.log(res);\r\n        \r\n        this.rows = res.data;\r\n        this.dtTrigger.next();\r\n      }\r\n    );\r\n  }\r\n  delete(id) {\r\n    this.service.delete(id).subscribe(\r\n      (res) => {\r\n        console.log(res);\r\n        if(res.status == 1){\r\n          this.toastr.success(res.message, '');\r\n          const index = this.rows.findIndex(v => v.id === id);\r\n          this.rows.splice(index, 1);\r\n        }else{\r\n          this.toastr.error(res.message, '');\r\n\r\n        }\r\n       \r\n      });\r\n  }\r\n\r\n  create(){\r\n    this.nameError = '';\r\n    if (this.callForm.invalid) {\r\n      this.errorMessage = 'من فضلك ادخل بيانات صحيحة';\r\n      return;\r\n    }\r\n    this.isSubmitClick = true;\r\n    this.data.name = this.callForm.value.name;\r\n    this.data.country_id = this.callForm.value.country_id;\r\n\r\n    \r\n    this.service.create(this.data).subscribe((res:any)=>{\r\n      console.log(res);\r\n      this.dtTrigger.unsubscribe();\r\n      if(res.status == 0){\r\n        this.isSubmitClick = false;\r\n        if(res.message.country_id)\r\n        this.toastr.error(res.message.country_id, '');\r\n        if(res.message.name)\r\n        this.toastr.error(res.message.name, '');\r\n\r\n\r\n      }else{\r\n        this.toastr.success(res.message, '');\r\n        this.errorMessage = '';\r\n        this.isSubmitClick = true;\r\n        \r\n        this.callHttp();\r\n\r\n      };\r\n    })\r\n  }\r\n  get name() {\r\n    return this.callForm.get('name');\r\n  }\r\n  get country_id() {\r\n    return this.callForm.get('country_id');\r\n  }\r\n// loadAllData() {\r\n\r\n// const that = this;\r\n\r\n\r\n// this.dtOptions = {\r\n//   pagingType: 'full_numbers',\r\n//   pageLength: 10,\r\n//   serverSide: true,\r\n//   processing: true,\r\n//   ajax: (dataTablesParameters: any, callback) => {\r\n//     that._http\r\n//       .post<DataTablesResponse>(\r\n//         //'https://angular-datatables-demo-server.herokuapp.com/',\r\n//         this.env.apiUrl + 'api/setup/ClientList_SelectAll_Grid',\r\n//         dataTablesParameters, {}\r\n//       ).subscribe(resp => {\r\n//         //console.log(dataTablesParameters);\r\n//         that.modelList = resp.data;\r\n\r\n\r\n//         callback({\r\n//           recordsTotal: resp.recordsTotal,\r\n//           recordsFiltered: resp.recordsFiltered,\r\n//           data: []\r\n//         });\r\n//       });\r\n//   },\r\n//   columns: [{ data: 'ClientID' }, { data: 'ClientName' }, { data: 'ClientPhone' }, { data: 'JoinDate' }, { data: 'Email' }, { data: 'IsActive' }, { defaultContent: '', orderable: false }]\r\n// };\r\n\r\n\r\n\r\n//  }\r\n\r\n//  ngAfterViewInit(): void {\r\n//     this.dtTrigger.next();\r\n//  }\r\n\r\n\r\n\r\n//  rerender(): void {\r\n\r\n// this.dtElement.dtInstance.then((dtInstance: DataTables.Api) => {\r\n//   // Destroy the table first\r\n//   dtInstance.destroy();\r\n//   // Call the dtTrigger to rerender again\r\n//   this.dtTrigger.next();\r\n// });\r\n\r\n\r\n// }\r\n\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpParams } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { IReqItem } from '../models/IReqItem';\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class GovernmentService {\r\n    constructor(private http: HttpClient) { }\r\n\r\n    public getAll(query:any): Observable<any> {\r\n        const params = new HttpParams()\r\n        .set('page', query.page)\r\n        .set('size', query.size)\r\n        return this.http.get('governments?api_token=123456789', { params: params });\r\n    }\r\n\r\n    public getItemById(id:string){\r\n        return this.http.get(`governments/${id}?api_token=123456789`);\r\n    }\r\n\r\n    public update(id:string, item:IReqItem): Observable<any> {\r\n        return this.http.put(`governments/${id}?api_token=123456789`, item);\r\n    }\r\n\r\n    public create(item:IReqItem){\r\n        return this.http.post(`governments?api_token=123456789`, item);\r\n    }\r\n    public delete(id: string): Observable<any>{\r\n        return this.http.delete(`governments/`+ id +`?api_token=123456789`);\r\n\r\n    }\r\n\r\n}\r\n"],"sourceRoot":""}